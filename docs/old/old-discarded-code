; ex 12.5
;	gi1aOneShotSP		init	0	; true, scan tables once 
then output zero
;	gi2aOneShotSP		init	0	; else cycle scan and 
output table value


; line from phaseS to phaseE (default 0, 1)
; phase time  is phasedur*sp
; this is from start note to end phase -what about start phase?
; really only make sense on whole-note application
;kStart = iPhaseS*k$layerNumayixsp*inotedur

;kEnd = k$layerNumayixsp*inotedur
;printks "kEnd %.3f kndpix %.3f\n", 0.01*inotedur, kEnd, kndpix

;if kEnd>kndpix then null output IF one-shot ELSE preserve original value
; we could mult by the flag value here
; bloody problem - thisd affects _both_ axes... we already have combined 
output
;gkamodamp = (kndpix>kEnd ? (1-gi$layerNumaOneShotSP)*gkamodamp : 
gkamodamp)

; another problem is the terrain scan period no longer matches the
; non-blanked period, we lose the shape of the terrain mod abruptly
; we want the terrain-modelled layer to occupy the same
; period - again, on only 1 axis
; lloks like we might be better kluding it post-process, accepting loss
; of the sustain/release phase and imposing a release instead...
; the above implemented approach fails on fn-generated terrains anyway
; since we can't use the index values to separate the x, y components
; for operation.. they may be numerically way out of 0-1 range so using 
; kndpix here is no help.

; only simple soln is use variable SP with the fn terrain and the same
; values on final terrain
; checking that that terrain is tbl-based and NOT fn-based (or it screws)
; and that way we only need 1 flag per terrain

; other old stuff

; make this a whole macro for a single layer?
#define initAmpTerrain
#

; Layer 1
gi1axOFtbl				table	0, gi1axOFtable, 0
gi1axOFixtbl				table	1, gi1axOFtable, 0
gi1axOFtoff				table	2, gi1axOFtable, 0
gi1axOFtwrap				table	3, gi1axOFtable, 0

; 1
gi1axOFmagmag			table	4, gi1axOFtable, 0
gi1axOFmagoff				table	5, gi1axOFtable, 0
gi1axOFmagtbl				table	6, gi1axOFtable, 0
gi1axOFmagixmag			table	7, gi1axOFtable, 0
gi1axOFmagixoff			table	8, gi1axOFtable, 0
gi1axOFmagixtbl			table	9, gi1axOFtable, 0
gi1axOFmagtoff			table	10, gi1axOFtable, 0
gi1axOFmagtwrap			table	11, gi1axOFtable, 0
gi1axOFmagixsp			table	12, gi1axOFtable, 0

; 2
gi1axOFoffmag				table	13, gi1axOFtable, 0
gi1axOFoffoff				table	14, gi1axOFtable, 0
gi1axOFofftbl				table	15, gi1axOFtable, 0
gi1axOFoffixmag			table	16, gi1axOFtable, 0
gi1axOFoffixoff				table	17, gi1axOFtable, 0
gi1axOFoffixtbl				table	18, gi1axOFtable, 0
gi1axOFofftoff				table	19, gi1axOFtable, 0
gi1axOFofftwrap			table	20, gi1axOFtable, 0
gi1axOFoffixsp				table	21, gi1axOFtable, 0

; 3
gi1axOFixmagmag			table	22, gi1axOFtable, 0
gi1axOFixmagoff			table	23, gi1axOFtable, 0
gi1axOFixmagtbl			table	24, gi1axOFtable, 0
gi1axOFixmagixmag			table	25, gi1axOFtable, 0
gi1axOFixmagixoff			table	26, gi1axOFtable, 0
gi1axOFixmagixtbl			table	27, gi1axOFtable, 0
gi1axOFixmagtoff			table	28, gi1axOFtable, 0
gi1axOFixmagtwrap			table	29, gi1axOFtable, 0
gi1axOFixmagixsp			table	30, gi1axOFtable, 0

; 4
gi1axOFixoffmag			table	31, gi1axOFtable, 0
gi1axOFixoffoff				table	32, gi1axOFtable, 0
gi1axOFixofftbl				table	33, gi1axOFtable, 0
gi1axOFixoffixmag			table	34, gi1axOFtable, 0
gi1axOFixoffixoff			table	35, gi1axOFtable, 0
gi1axOFixoffixtbl			table	36, gi1axOFtable, 0
gi1axOFixofftoff			table	37, gi1axOFtable, 0
gi1axOFixofftwrap			table	38, gi1axOFtable, 0
gi1axOFixoffixsp			table	39, gi1axOFtable, 0

; 5
gi1axOFixspmag			table	40, gi1axOFtable, 0
gi1axOFixspoff				table	41, gi1axOFtable, 0
gi1axOFixsptbl				table	42, gi1axOFtable, 0
gi1axOFixspixmag			table	43, gi1axOFtable, 0
gi1axOFixspixoff			table	44, gi1axOFtable, 0
gi1axOFixspixtbl			table	45, gi1axOFtable, 0
gi1axOFixsptoff				table	46, gi1axOFtable, 0
gi1axOFixsptwrap			table	47, gi1axOFtable, 0
gi1axOFixspixsp			table	48, gi1axOFtable, 0

gi1ayOFtbl				table	0, gi1ayOFtable, 0
gi1ayOFixtbl				table	1, gi1ayOFtable, 0
gi1ayOFtoff				table	2, gi1ayOFtable, 0
gi1ayOFtwrap				table	3, gi1ayOFtable, 0

; 1
gi1ayOFmagmag			table	4, gi1ayOFtable, 0
gi1ayOFmagoff				table	5, gi1ayOFtable, 0
gi1ayOFmagtbl				table	6, gi1ayOFtable, 0
gi1ayOFmagixmag			table	7, gi1ayOFtable, 0
gi1ayOFmagixoff			table	8, gi1ayOFtable, 0
gi1ayOFmagixtbl			table	9, gi1ayOFtable, 0
gi1ayOFmagtoff			table	10, gi1ayOFtable, 0
gi1ayOFmagtwrap			table	11, gi1ayOFtable, 0
gi1ayOFmagixsp			table	12, gi1ayOFtable, 0

; 2
gi1ayOFoffmag				table	13, gi1ayOFtable, 0
gi1ayOFoffoff				table	14, gi1ayOFtable, 0
gi1ayOFofftbl				table	15, gi1ayOFtable, 0
gi1ayOFoffixmag			table	16, gi1ayOFtable, 0
gi1ayOFoffixoff				table	17, gi1ayOFtable, 0
gi1ayOFoffixtbl				table	18, gi1ayOFtable, 0
gi1ayOFofftoff				table	19, gi1ayOFtable, 0
gi1ayOFofftwrap			table	20, gi1ayOFtable, 0
gi1ayOFoffixsp				table	21, gi1ayOFtable, 0

; 3
gi1ayOFixmagmag			table	22, gi1ayOFtable, 0
gi1ayOFixmagoff			table	23, gi1ayOFtable, 0
gi1ayOFixmagtbl			table	24, gi1ayOFtable, 0
gi1ayOFixmagixmag			table	25, gi1ayOFtable, 0
gi1ayOFixmagixoff			table	26, gi1ayOFtable, 0
gi1ayOFixmagixtbl			table	27, gi1ayOFtable, 0
gi1ayOFixmagtoff			table	28, gi1ayOFtable, 0
gi1ayOFixmagtwrap			table	29, gi1ayOFtable, 0
gi1ayOFixmagixsp			table	30, gi1ayOFtable, 0

; 4
gi1ayOFixoffmag			table	31, gi1ayOFtable, 0
gi1ayOFixoffoff				table	32, gi1ayOFtable, 0
gi1ayOFixofftbl				table	33, gi1ayOFtable, 0
gi1ayOFixoffixmag			table	34, gi1ayOFtable, 0
gi1ayOFixoffixoff			table	35, gi1ayOFtable, 0
gi1ayOFixoffixtbl			table	36, gi1ayOFtable, 0
gi1ayOFixofftoff			table	37, gi1ayOFtable, 0
gi1ayOFixofftwrap			table	38, gi1ayOFtable, 0
gi1ayOFixoffixsp			table	39, gi1ayOFtable, 0

; 5
gi1ayOFixspmag			table	40, gi1ayOFtable, 0
gi1ayOFixspoff				table	41, gi1ayOFtable, 0
gi1ayOFixsptbl				table	42, gi1ayOFtable, 0
gi1ayOFixspixmag			table	43, gi1ayOFtable, 0
gi1ayOFixspixoff			table	44, gi1ayOFtable, 0
gi1ayOFixspixtbl			table	45, gi1ayOFtable, 0
gi1ayOFixsptoff				table	46, gi1ayOFtable, 0
gi1ayOFixsptwrap			table	47, gi1ayOFtable, 0
gi1ayOFixspixsp			table	48, gi1ayOFtable, 0

gi1axOPtbl				table	0, gi1axOPtable, 0
gi1axOPixtbl				table	1, gi1axOPtable, 0
gi1axOPtoff				table	2, gi1axOPtable, 0
gi1axOPtwrap				table	3, gi1axOPtable, 0

; 1
gi1axOPmagmag			table	4, gi1axOPtable, 0
gi1axOPmagoff				table	5, gi1axOPtable, 0
gi1axOPmagtbl				table	6, gi1axOPtable, 0
gi1axOPmagixmag			table	7, gi1axOPtable, 0
gi1axOPmagixoff			table	8, gi1axOPtable, 0
gi1axOPmagixtbl			table	9, gi1axOPtable, 0
gi1axOPmagtoff			table	10, gi1axOPtable, 0
gi1axOPmagtwrap			table	11, gi1axOPtable, 0
gi1axOPmagixsp			table	12, gi1axOPtable, 0

; 2
gi1axOPoffmag				table	13, gi1axOPtable, 0
gi1axOPoffoff				table	14, gi1axOPtable, 0
gi1axOPofftbl				table	15, gi1axOPtable, 0
gi1axOPoffixmag			table	16, gi1axOPtable, 0
gi1axOPoffixoff				table	17, gi1axOPtable, 0
gi1axOPoffixtbl				table	18, gi1axOPtable, 0
gi1axOPofftoff				table	19, gi1axOPtable, 0
gi1axOPofftwrap			table	20, gi1axOPtable, 0
gi1axOPoffixsp				table	21, gi1axOPtable, 0

; 3
gi1axOPixmagmag			table	22, gi1axOPtable, 0
gi1axOPixmagoff			table	23, gi1axOPtable, 0
gi1axOPixmagtbl			table	24, gi1axOPtable, 0
gi1axOPixmagixmag			table	25, gi1axOPtable, 0
gi1axOPixmagixoff			table	26, gi1axOPtable, 0
gi1axOPixmagixtbl			table	27, gi1axOPtable, 0
gi1axOPixmagtoff			table	28, gi1axOPtable, 0
gi1axOPixmagtwrap			table	29, gi1axOPtable, 0
gi1axOPixmagixsp			table	30, gi1axOPtable, 0

; 4
gi1axOPixoffmag			table	31, gi1axOPtable, 0
gi1axOPixoffoff				table	32, gi1axOPtable, 0
gi1axOPixofftbl				table	33, gi1axOPtable, 0
gi1axOPixoffixmag			table	34, gi1axOPtable, 0
gi1axOPixoffixoff			table	35, gi1axOPtable, 0
gi1axOPixoffixtbl			table	36, gi1axOPtable, 0
gi1axOPixofftoff			table	37, gi1axOPtable, 0
gi1axOPixofftwrap			table	38, gi1axOPtable, 0
gi1axOPixoffixsp			table	39, gi1axOPtable, 0

; 5
gi1axOPixspmag			table	40, gi1axOPtable, 0
gi1axOPixspoff				table	41, gi1axOPtable, 0
gi1axOPixsptbl				table	42, gi1axOPtable, 0
gi1axOPixspixmag			table	43, gi1axOPtable, 0
gi1axOPixspixoff			table	44, gi1axOPtable, 0
gi1axOPixspixtbl			table	45, gi1axOPtable, 0
gi1axOPixsptoff				table	46, gi1axOPtable, 0
gi1axOPixsptwrap			table	47, gi1axOPtable, 0
gi1axOPixspixsp			table	48, gi1axOPtable, 0

gi1ayOPtbl				table	0, gi1ayOPtable, 0
gi1ayOPixtbl				table	1, gi1ayOPtable, 0
gi1ayOPtoff				table	2, gi1ayOPtable, 0
gi1ayOPtwrap				table	3, gi1ayOPtable, 0

; 1
gi1ayOPmagmag			table	4, gi1ayOPtable, 0
gi1ayOPmagoff				table	5, gi1ayOPtable, 0
gi1ayOPmagtbl				table	6, gi1ayOPtable, 0
gi1ayOPmagixmag			table	7, gi1ayOPtable, 0
gi1ayOPmagixoff			table	8, gi1ayOPtable, 0
gi1ayOPmagixtbl			table	9, gi1ayOPtable, 0
gi1ayOPmagtoff			table	10, gi1ayOPtable, 0
gi1ayOPmagtwrap			table	11, gi1ayOPtable, 0
gi1ayOPmagixsp			table	12, gi1ayOPtable, 0

; 2
gi1ayOPoffmag				table	13, gi1ayOPtable, 0
gi1ayOPoffoff				table	14, gi1ayOPtable, 0
gi1ayOPofftbl				table	15, gi1ayOPtable, 0
gi1ayOPoffixmag			table	16, gi1ayOPtable, 0
gi1ayOPoffixoff				table	17, gi1ayOPtable, 0
gi1ayOPoffixtbl				table	18, gi1ayOPtable, 0
gi1ayOPofftoff				table	19, gi1ayOPtable, 0
gi1ayOPofftwrap			table	20, gi1ayOPtable, 0
gi1ayOPoffixsp				table	21, gi1ayOPtable, 0

; 3
gi1ayOPixmagmag			table	22, gi1ayOPtable, 0
gi1ayOPixmagoff			table	23, gi1ayOPtable, 0
gi1ayOPixmagtbl			table	24, gi1ayOPtable, 0
gi1ayOPixmagixmag			table	25, gi1ayOPtable, 0
gi1ayOPixmagixoff			table	26, gi1ayOPtable, 0
gi1ayOPixmagixtbl			table	27, gi1ayOPtable, 0
gi1ayOPixmagtoff			table	28, gi1ayOPtable, 0
gi1ayOPixmagtwrap			table	29, gi1ayOPtable, 0
gi1ayOPixmagixsp			table	30, gi1ayOPtable, 0

; 4
gi1ayOPixoffmag			table	31, gi1ayOPtable, 0
gi1ayOPixoffoff				table	32, gi1ayOPtable, 0
gi1ayOPixofftbl				table	33, gi1ayOPtable, 0
gi1ayOPixoffixmag			table	34, gi1ayOPtable, 0
gi1ayOPixoffixoff			table	35, gi1ayOPtable, 0
gi1ayOPixoffixtbl			table	36, gi1ayOPtable, 0
gi1ayOPixofftoff			table	37, gi1ayOPtable, 0
gi1ayOPixofftwrap			table	38, gi1ayOPtable, 0
gi1ayOPixoffixsp			table	39, gi1ayOPtable, 0

; 5
gi1ayOPixspmag			table	40, gi1ayOPtable, 0
gi1ayOPixspoff				table	41, gi1ayOPtable, 0
gi1ayOPixsptbl				table	42, gi1ayOPtable, 0
gi1ayOPixspixmag			table	43, gi1ayOPtable, 0
gi1ayOPixspixoff			table	44, gi1ayOPtable, 0
gi1ayOPixspixtbl			table	45, gi1ayOPtable, 0
gi1ayOPixsptoff				table	46, gi1ayOPtable, 0
gi1ayOPixsptwrap			table	47, gi1ayOPtable, 0
gi1ayOPixspixsp			table	48, gi1ayOPtable, 0

; default modify whole note
; no offset, phase correct at note start
i1aTerrainDur = idur
i1aEnvPhaseS = $mindur	; avoid table termination due to zero duration
i1aEnvPhaseE = idur
if gi1aEnvPhase==0 igoto amp1EPdone

if gi1aEnvPhase>1 igoto amp1EP2
; attack phase
i1aTerrainDur = iaeattack
i1aEnvPhaseS = $mindur
i1aEnvPhaseE = iaeattack
igoto amp1EPdone

amp1EP2:
if gi1aEnvPhase>2 igoto amp1EP3
; post-attack phase
; either dcl or dcy+sus+rls
i1aTerrainDur = (giusrdclphs==0 ? iaedecline : idur-iaeattack)
i1aEnvPhaseS = iaeattack
i1aEnvPhaseE = idur
igoto amp1EPdone

amp1EP3:
if giusrdclphs==0 igoto amp1EPdone
if gi1aEnvPhase>3 igoto amp1EP4
; decay phase
i1aTerrainDur = iaedecay
i1aEnvPhaseS = iaeattack
i1aEnvPhaseE = idur--iaesustain-iaerelease
igoto amp1EPdone

amp1EP4:
if gi1aEnvPhase>4 igoto amp1EP5
; sustain phase
i1aTerrainDur = iaesustain
i1aEnvPhaseS = iaeattack+iaedecay
i1aEnvPhaseE = idur-iaerelease
igoto amp1EPdone

amp1EP5:
if gi1aEnvPhase>5 igoto amp1EP6
; release phase
i1aTerrainDur = iaerelease
i1aEnvPhaseS = idur-iaerelease
i1aEnvPhaseE = idur
igoto amp1EPdone

amp1EP6:
if gi1aEnvPhase>6 igoto amp1EP7
; decay+sustain phases
i1aTerrainDur = iaedecay+iaesustain
i1aEnvPhaseS = iaeattack
i1aEnvPhaseE = idur-iaerelease
igoto amp1EPdone

amp1EP7:
; sustain+release phases
i1aTerrainDur = iaesustain+iaerelease
i1aEnvPhaseS = iaeattack+iaedecay
i1aEnvPhaseE = idur

amp1EPdone:

; period: n >= 0, n/duration (iterrainPeriod); n < 0, frequency (Hz)
; default: note frequency linkage?
; what about amp linkage?
; we need these for the terrain indexing to be dynamic; here it is only related
; to fixed freq/note duration

; note: these do similar jon: another macro
gi1axOFmagixsp = (gi1axOFmagixsp<0 ? abs(gi1axOFmagixsp) : gi1axOFmagixsp/i1aTerrainDur)
gi1axOFoffixsp = (gi1axOFoffixsp<0 ? abs(gi1axOFoffixsp) : gi1axOFoffixsp/i1aTerrainDur)
gi1axOFixmagixsp = (gi1axOFixmagixsp<0 ? abs(gi1axOFixmagixsp) : gi1axOFixmagixsp/i1aTerrainDur)
gi1axOFixoffixsp = (gi1axOFixoffixsp<0 ? abs(gi1axOFixoffixsp) : gi1axOFixoffixsp/i1aTerrainDur)
gi1axOFixspixsp = (gi1axOFixspixsp<0 ? abs(gi1axOFixspixsp) : gi1axOFixspixsp/i1aTerrainDur)
gi1axOFixspixmag = (gi1axOFixspixmag<0? abs(gi1axOFixspixmag) : gi1axOFixspixmag/i1aTerrainDur)
gi1axOFixspmag = (gi1axOFixspmag<0? abs(gi1axOFixspmag) : gi1axOFixspmag/i1aTerrainDur)

gi1ayOFmagixsp = (gi1ayOFmagixsp<0 ? abs(gi1ayOFmagixsp) : gi1ayOFmagixsp/i1aTerrainDur)
gi1ayOFoffixsp = (gi1ayOFoffixsp<0 ? abs(gi1ayOFoffixsp) : gi1ayOFoffixsp/i1aTerrainDur)
gi1ayOFixmagixsp = (gi1ayOFixmagixsp<0 ? abs(gi1ayOFixmagixsp) : gi1ayOFixmagixsp/i1aTerrainDur)
gi1ayOFixoffixsp = (gi1ayOFixoffixsp<0 ? abs(gi1ayOFixoffixsp) : gi1ayOFixoffixsp/i1aTerrainDur)
gi1ayOFixspixsp = (gi1ayOFixspixsp<0 ? abs(gi1ayOFixspixsp) : gi1ayOFixspixsp/i1aTerrainDur)
gi1ayOFixspixmag = (gi1ayOFixspixmag<0? abs(gi1ayOFixspixmag) : gi1ayOFixspixmag/i1aTerrainDur)
gi1ayOFixspmag = (gi1ayOFixspmag<0? abs(gi1ayOFixspmag) : gi1ayOFixspmag/i1aTerrainDur)

gi1axOPmagixsp = (gi1axOPmagixsp<0 ? abs(gi1axOPmagixsp) : gi1axOPmagixsp/i1aTerrainDur)
gi1axOPoffixsp = (gi1axOPoffixsp<0 ? abs(gi1axOPoffixsp) : gi1axOPoffixsp/i1aTerrainDur)
gi1axOPixmagixsp = (gi1axOPixmagixsp<0 ? abs(gi1axOPixmagixsp) : gi1axOPixmagixsp/i1aTerrainDur)
gi1axOPixoffixsp = (gi1axOPixoffixsp<0 ? abs(gi1axOPixoffixsp) : gi1axOPixoffixsp/i1aTerrainDur)
gi1axOPixspixsp = (gi1axOPixspixsp<0 ? abs(gi1axOPixspixsp) : gi1axOPixspixsp/i1aTerrainDur)
gi1axOPixspixmag = (gi1axOPixspixmag<0? abs(gi1axOPixspixmag) : gi1axOPixspixmag/i1aTerrainDur)
gi1axOPixspmag = (gi1axOPixspmag<0? abs(gi1axOPixspmag) : gi1axOPixspmag/i1aTerrainDur)

gi1ayOPmagixsp = (gi1ayOPmagixsp<0 ? abs(gi1ayOPmagixsp) : gi1ayOPmagixsp/i1aTerrainDur)
gi1ayOPoffixsp = (gi1ayOPoffixsp<0 ? abs(gi1ayOPoffixsp) : gi1ayOPoffixsp/i1aTerrainDur)
gi1ayOPixmagixsp = (gi1ayOPixmagixsp<0 ? abs(gi1ayOPixmagixsp) : gi1ayOPixmagixsp/i1aTerrainDur)
gi1ayOPixoffixsp = (gi1ayOPixoffixsp<0 ? abs(gi1ayOPixoffixsp) : gi1ayOPixoffixsp/i1aTerrainDur)
gi1ayOPixspixsp = (gi1ayOPixspixsp<0 ? abs(gi1ayOPixspixsp) : gi1ayOPixspixsp/i1aTerrainDur)
gi1ayOPixspixmag = (gi1ayOPixspixmag<0? abs(gi1ayOPixspixmag) : gi1ayOPixspixmag/i1aTerrainDur)
gi1ayOPixspmag = (gi1ayOPixspmag<0? abs(gi1ayOPixspmag) : gi1ayOPixspmag/i1aTerrainDur)

; better off making this lot a separate macro
; amp terrain layer 1 function endpoint values
; gi1aEnvPhase
; 1
iindex = frac(i1aEnvPhaseS*gi1axOPmagixsp)
i1axOPmagixS	tablei	iindex, gi1axOPmagixtbl, 1
iindex = frac(i1aEnvPhaseE*gi1axOPmagixsp)
i1axOPmagixE	tablei	iindex, gi1axOPmagixtbl, 1
i1axOPmagixS = i1axOPmagixS*gi1axOPmagixmag+gi1axOPmagixoff
i1axOPmagixE = i1axOPmagixE*gi1axOPmagixmag+gi1axOPmagixoff
i1axOPmagS	tablei	i1axOPmagixS, gi1axOPmagtbl, 1, gi1axOPmagtoff, gi1axOPmagtwrap
i1axOPmagE	tablei	i1axOPmagixE, gi1axOPmagtbl, 1, gi1axOPmagtoff, gi1axOPmagtwrap
i1axOPmagS = i1axOPmagS*gi1axOPmagmag+gi1axOPmagoff
i1axOPmagE = i1axOPmagE*gi1axOPmagmag+gi1axOPmagoff

; 2
iindex = frac(i1aEnvPhaseS*gi1axOPoffixsp)
i1axOPoffixS	tablei	iindex, gi1axOPoffixtbl, 1
iindex = frac(i1aEnvPhaseS*gi1axOPoffixsp)
i1axOPoffixE	tablei	iindex, gi1axOPoffixtbl, 1
i1axOPoffixS = i1axOPoffixS*gi1axOPoffixmag+gi1axOPoffixoff
i1axOPoffixE = i1axOPoffixE*gi1axOPoffixmag+gi1axOPoffixoff
i1axOPoffS	tablei	i1axOPoffixS, gi1axOPofftbl, 1, gi1axOPofftoff, gi1axOPofftwrap
i1axOPoffE	tablei	i1axOPoffixE, gi1axOPofftbl, 1, gi1axOPofftoff, gi1axOPofftwrap
i1axOPoffS = i1axOPoffS*gi1axOPoffmag+gi1axOPoffoff
i1axOPoffE = i1axOPoffE*gi1axOPoffmag+gi1axOPoffoff

; 3
iindex = frac(i1aEnvPhaseS*gi1axOPixmagixsp)
i1axOPixmagixS	tablei	iindex, gi1axOPixmagixtbl, 1
iindex = frac(i1aEnvPhaseE*gi1axOPixmagixsp)
i1axOPixmagixE	tablei	iindex, gi1axOPixmagixtbl, 1
i1axOPixmagixS = i1axOPixmagixS*gi1axOPixmagixmag+gi1axOPixmagixoff
i1axOPixmagixE = i1axOPixmagixE*gi1axOPixmagixmag+gi1axOPixmagixoff
i1axOPixmagS	tablei	i1axOPixmagixS, gi1axOPixmagtbl, 1, gi1axOPixmagtoff, gi1axOPixmagtwrap
i1axOPixmagE	tablei	i1axOPixmagixE, gi1axOPixmagtbl, 1, gi1axOPixmagtoff, gi1axOPixmagtwrap
axOPixmagS = i1axOPixmagS*gi1axOPixmagmag+gi1axOPixmagoff
i1axOPixmagE = i1axOPixmagE*gi1axOPixmagmag+gi1axOPixmagoff

; 4
iindex = frac(i1aEnvPhaseS*gi1axOPixoffixsp)
i1axOPixoffixS	tablei	iindex, gi1axOPixoffixtbl, 1
iindex = frac(i1aEnvPhaseE*gi1axOPixoffixsp)
i1axOPixoffixE	tablei	iindex, gi1axOPixoffixtbl, 1
i1axOPixoffixS = i1axOPixoffixS*gi1axOPixoffixmag+gi1axOPixoffixoff
i1axOPixoffixE = i1axOPixoffixE*gi1axOPixoffixmag+gi1axOPixoffixoff
i1axOPixoffS	tablei	i1axOPixoffixS, gi1axOPixofftbl, 1, gi1axOPixofftoff, gi1axOPixofftwrap
i1axOPixoffE	tablei	i1axOPixoffixE, gi1axOPixofftbl, 1, gi1axOPixofftoff, gi1axOPixofftwrap
i1axOPixoffS = i1axOPixoffS*gi1axOPixoffmag+gi1axOPixoffoff
i1axOPixoffE = i1axOPixoffE*gi1axOPixoffmag+gi1axOPixoffoff

; 5
iindex = frac(i1aEnvPhaseS*gi1axOPixspixsp)
i1axOPixspixS	tablei	iindex, gi1axOPixspixtbl, 1
iindex = frac(i1aEnvPhaseE*gi1axOPixspixsp)
i1axOPixspixE	tablei	iindex, gi1axOPixspixtbl, 1
i1axOPixspixS = i1axOPixspixS*gi1axOPixspixmag+gi1axOPixspixoff
i1axOPixspixE = i1axOPixspixE*gi1axOPixspixmag+gi1axOPixspixoff
i1axOPixspS	tablei	i1axOPixspixS, gi1axOPixsptbl, 1, gi1axOPixsptoff, gi1axOPixsptwrap
i1axOPixspE	tablei	i1axOPixspixE, gi1axOPixsptbl, 1, gi1axOPixsptoff, gi1axOPixsptwrap
i1axOPixspS = i1axOPixspS*gi1axOPixspmag+gi1axOPixspoff
i1axOPixspE = i1axOPixspE*gi1axOPixspmag+gi1axOPixspoff

; Finally do top-level indexing
iindex = frac(i1aEnvPhaseS*i1axOPixspS)
i1axOPixS	tablei	iindex, gi1axOPixtbl, 1
iindex = frac(i1aEnvPhaseE*i1axOPixspE)
i1axOPixE	tablei	iindex, gi1axOPixtbl, 1
i1axOPixS = i1axOPixS*i1axOPixmagS+i1axOPixoffS
i1axOPixE = i1axOPixE*i1axOPixmagE+i1axOPixoffE

; final table lookup
i1axOPS	tablei	i1axOPixS, gi1axOPtbl, 1, gi1axOPtoff, gi1axOPtwrap
i1axOPS = i1axOPS*i1axOPmagS+i1axOPoffS	; i1axOPS is final output
i1axOPE	tablei	i1axOPixE, gi1axOPtbl, 1, gi1axOPtoff, gi1axOPtwrap
i1axOPE = i1axOPE*i1axOPmagE+i1axOPoffE	; i1axOPS is final output
;printks "amp layer 1: i1axOPS %.3f i1axOPE %.3f\n", idur, i1axOPS, i1axOPE

; 1
iindex = frac(i1aEnvPhaseS*gi1axOFmagixsp)
i1axOFmagixS	tablei	iindex, gi1axOFmagixtbl, 1
iindex = frac(i1aEnvPhaseE*gi1axOFmagixsp)
i1axOFmagixE	tablei	iindex, gi1axOFmagixtbl, 1
i1axOFmagixS = i1axOFmagixS*gi1axOFmagixmag+gi1axOFmagixoff
i1axOFmagixE = i1axOFmagixE*gi1axOFmagixmag+gi1axOFmagixoff
i1axOFmagS	tablei	i1axOFmagixS, gi1axOFmagtbl, 1, gi1axOFmagtoff, gi1axOFmagtwrap
i1axOFmagE	tablei	i1axOFmagixE, gi1axOFmagtbl, 1, gi1axOFmagtoff, gi1axOFmagtwrap
i1axOFmagS = i1axOFmagS*gi1axOFmagmag+gi1axOFmagoff
i1axOFmagE = i1axOFmagE*gi1axOFmagmag+gi1axOFmagoff

; 2
iindex = frac(i1aEnvPhaseS*gi1axOFoffixsp)
i1axOFoffixS	tablei	iindex, gi1axOFoffixtbl, 1
iindex = frac(i1aEnvPhaseS*gi1axOFoffixsp)
i1axOFoffixE	tablei	iindex, gi1axOFoffixtbl, 1
i1axOFoffixS = i1axOFoffixS*gi1axOFoffixmag+gi1axOFoffixoff
i1axOFoffixE = i1axOFoffixE*gi1axOFoffixmag+gi1axOFoffixoff
i1axOFoffS	tablei	i1axOFoffixS, gi1axOFofftbl, 1, gi1axOFofftoff, gi1axOFofftwrap
i1axOFoffE	tablei	i1axOFoffixE, gi1axOFofftbl, 1, gi1axOFofftoff, gi1axOFofftwrap
i1axOFoffS = i1axOFoffS*gi1axOFoffmag+gi1axOFoffoff
i1axOFoffE = i1axOFoffE*gi1axOFoffmag+gi1axOFoffoff

; 3
iindex = frac(i1aEnvPhaseS*gi1axOFixmagixsp)
i1axOFixmagixS	tablei	iindex, gi1axOFixmagixtbl, 1
iindex = frac(i1aEnvPhaseE*gi1axOFixmagixsp)
i1axOFixmagixE	tablei	iindex, gi1axOFixmagixtbl, 1
i1axOFixmagixS = i1axOFixmagixS*gi1axOFixmagixmag+gi1axOFixmagixoff
i1axOFixmagixE = i1axOFixmagixE*gi1axOFixmagixmag+gi1axOFixmagixoff
i1axOFixmagS	tablei	i1axOFixmagixS, gi1axOFixmagtbl, 1, gi1axOFixmagtoff, gi1axOFixmagtwrap
i1axOFixmagE	tablei	i1axOFixmagixE, gi1axOFixmagtbl, 1, gi1axOFixmagtoff, gi1axOFixmagtwrap
i1axOFixmagS = i1axOFixmagS*gi1axOFixmagmag+gi1axOFixmagoff
i1axOFixmagE = i1axOFixmagE*gi1axOFixmagmag+gi1axOFixmagoff

; 4
iindex = frac(i1aEnvPhaseS*gi1axOFixoffixsp)
i1axOFixoffixS	tablei	iindex, gi1axOFixoffixtbl, 1
iindex = frac(i1aEnvPhaseE*gi1axOFixoffixsp)
i1axOFixoffixE	tablei	iindex, gi1axOFixoffixtbl, 1
i1axOFixoffixS = i1axOFixoffixS*gi1axOFixoffixmag+gi1axOFixoffixoff
i1axOFixoffixE = i1axOFixoffixE*gi1axOFixoffixmag+gi1axOFixoffixoff
i1axOFixoffS	tablei	i1axOFixoffixS, gi1axOFixofftbl, 1, gi1axOFixofftoff, gi1axOFixofftwrap
i1axOFixoffE	tablei	i1axOFixoffixE, gi1axOFixofftbl, 1, gi1axOFixofftoff, gi1axOFixofftwrap
i1axOFixoffS = i1axOFixoffS*gi1axOFixoffmag+gi1axOFixoffoff
i1axOFixoffE = i1axOFixoffE*gi1axOFixoffmag+gi1axOFixoffoff

; 5
iindex = frac(i1aEnvPhaseS*gi1axOFixspixsp)
i1axOFixspixS	tablei	iindex, gi1axOFixspixtbl, 1
iindex = frac(i1aEnvPhaseE*gi1axOFixspixsp)
i1axOFixspixE	tablei	iindex, gi1axOFixspixtbl, 1
i1axOFixspixS = i1axOFixspixS*gi1axOFixspixmag+gi1axOFixspixoff
i1axOFixspixE = i1axOFixspixE*gi1axOFixspixmag+gi1axOFixspixoff
i1axOFixspS	tablei	i1axOFixspixS, gi1axOFixsptbl, 1, gi1axOFixsptoff, gi1axOFixsptwrap
i1axOFixspE	tablei	i1axOFixspixE, gi1axOFixsptbl, 1, gi1axOFixsptoff, gi1axOFixsptwrap
i1axOFixspS = i1axOFixspS*gi1axOFixspmag+gi1axOFixspoff
i1axOFixspE = i1axOFixspE*gi1axOFixspmag+gi1axOFixspoff

; Finally do top-level indexing
iindex = frac(i1aEnvPhaseS*i1axOFixspS)
i1axOFixS	tablei	iindex, gi1axOFixtbl, 1
iindex = frac(i1aEnvPhaseE*i1axOFixspE)
i1axOFixE	tablei	iindex, gi1axOFixtbl, 1
i1axOFixS = i1axOFixS*i1axOFixmagS+i1axOFixoffS
i1axOFixE = i1axOFixE*i1axOFixmagE+i1axOFixoffE

; see note below: can't put htis sect in a macro
; final table lookup
i1axOFS	tablei	i1axOFixS+i1axOPS, gi1axOFtbl, 1, gi1axOFtoff, gi1axOFtwrap
i1axOFS = i1axOFS*i1axOFmagS+i1axOFoffS	; i1axOFS is final output
i1axOFE	tablei	i1axOFixE+i1axOPE, gi1axOFtbl, 1, gi1axOFtoff, gi1axOFtwrap
i1axOFE = i1axOFE*i1axOFmagE+i1axOFoffE	; i1axOFS is final output
printks "final i1axOFS %.3f i1axOFE %.3f\n", idur, i1axOFS, i1axOFE

; now we need to do the whole lot again for the y functions
; 1
iindex = frac(i1aEnvPhaseS*gi1ayOPmagixsp)
i1ayOPmagixS	tablei	iindex, gi1ayOPmagixtbl, 1
iindex = frac(i1aEnvPhaseE*gi1ayOPmagixsp)
i1ayOPmagixE	tablei	iindex, gi1ayOPmagixtbl, 1
i1ayOPmagixS = i1ayOPmagixS*gi1ayOPmagixmag+gi1ayOPmagixoff
i1ayOPmagixE = i1ayOPmagixE*gi1ayOPmagixmag+gi1ayOPmagixoff
i1ayOPmagS	tablei	i1ayOPmagixS, gi1ayOPmagtbl, 1, gi1ayOPmagtoff, gi1ayOPmagtwrap
i1ayOPmagE	tablei	i1ayOPmagixE, gi1ayOPmagtbl, 1, gi1ayOPmagtoff, gi1ayOPmagtwrap
i1ayOPmagS = i1ayOPmagS*gi1ayOPmagmag+gi1ayOPmagoff
i1ayOPmagE = i1ayOPmagE*gi1ayOPmagmag+gi1ayOPmagoff

; 2
iindex = frac(i1aEnvPhaseS*gi1ayOPoffixsp)
i1ayOPoffixS	tablei	iindex, gi1ayOPoffixtbl, 1
iindex = frac(i1aEnvPhaseS*gi1ayOPoffixsp)
i1ayOPoffixE	tablei	iindex, gi1ayOPoffixtbl, 1
i1ayOPoffixS = i1ayOPoffixS*gi1ayOPoffixmag+gi1ayOPoffixoff
i1ayOPoffixE = i1ayOPoffixE*gi1ayOPoffixmag+gi1ayOPoffixoff
i1ayOPoffS	tablei	i1ayOPoffixS, gi1ayOPofftbl, 1, gi1ayOPofftoff, gi1ayOPofftwrap
i1ayOPoffE	tablei	i1ayOPoffixE, gi1ayOPofftbl, 1, gi1ayOPofftoff, gi1ayOPofftwrap
i1ayOPoffS = i1ayOPoffS*gi1ayOPoffmag+gi1ayOPoffoff
i1ayOPoffE = i1ayOPoffE*gi1ayOPoffmag+gi1ayOPoffoff

; 3
iindex = frac(i1aEnvPhaseS*gi1ayOPixmagixsp)
i1ayOPixmagixS	tablei	iindex, gi1ayOPixmagixtbl, 1
iindex = frac(i1aEnvPhaseE*gi1ayOPixmagixsp)
i1ayOPixmagixE	tablei	iindex, gi1ayOPixmagixtbl, 1
i1ayOPixmagixS = i1ayOPixmagixS*gi1ayOPixmagixmag+gi1ayOPixmagixoff
i1ayOPixmagixE = i1ayOPixmagixE*gi1ayOPixmagixmag+gi1ayOPixmagixoff
i1ayOPixmagS	tablei	i1ayOPixmagixS, gi1ayOPixmagtbl, 1, gi1ayOPixmagtoff, gi1ayOPixmagtwrap
i1ayOPixmagE	tablei	i1ayOPixmagixE, gi1ayOPixmagtbl, 1, gi1ayOPixmagtoff, gi1ayOPixmagtwrap
i1ayOPixmagS = i1ayOPixmagS*gi1ayOPixmagmag+gi1ayOPixmagoff
i1ayOPixmagE = i1ayOPixmagE*gi1ayOPixmagmag+gi1ayOPixmagoff

; 4
iindex = frac(i1aEnvPhaseS*gi1ayOPixoffixsp)
i1ayOPixoffixS	tablei	iindex, gi1ayOPixoffixtbl, 1
iindex = frac(i1aEnvPhaseE*gi1ayOPixoffixsp)
i1ayOPixoffixE	tablei	iindex, gi1ayOPixoffixtbl, 1
i1ayOPixoffixS = i1ayOPixoffixS*gi1ayOPixoffixmag+gi1ayOPixoffixoff
i1ayOPixoffixE = i1ayOPixoffixE*gi1ayOPixoffixmag+gi1ayOPixoffixoff
i1ayOPixoffS	tablei	i1ayOPixoffixS, gi1ayOPixofftbl, 1, gi1ayOPixofftoff, gi1ayOPixofftwrap
i1ayOPixoffE	tablei	i1ayOPixoffixE, gi1ayOPixofftbl, 1, gi1ayOPixofftoff, gi1ayOPixofftwrap
i1ayOPixoffS = i1ayOPixoffS*gi1ayOPixoffmag+gi1ayOPixoffoff
i1ayOPixoffE = i1ayOPixoffE*gi1ayOPixoffmag+gi1ayOPixoffoff

; 5
iindex = frac(i1aEnvPhaseS*gi1ayOPixspixsp)
i1ayOPixspixS	tablei	iindex, gi1ayOPixspixtbl, 1
iindex = frac(i1aEnvPhaseE*gi1ayOPixspixsp)
i1ayOPixspixE	tablei	iindex, gi1ayOPixspixtbl, 1
i1ayOPixspixS = i1ayOPixspixS*gi1ayOPixspixmag+gi1ayOPixspixoff
i1ayOPixspixE = i1ayOPixspixE*gi1ayOPixspixmag+gi1ayOPixspixoff
i1ayOPixspS	tablei	i1ayOPixspixS, gi1ayOPixsptbl, 1, gi1ayOPixsptoff, gi1ayOPixsptwrap
i1ayOPixspE	tablei	i1ayOPixspixE, gi1ayOPixsptbl, 1, gi1ayOPixsptoff, gi1ayOPixsptwrap
i1ayOPixspS = i1ayOPixspS*gi1ayOPixspmag+gi1ayOPixspoff
i1ayOPixspE = i1ayOPixspE*gi1ayOPixspmag+gi1ayOPixspoff

; Finally do top-level indexing
iindex = frac(i1aEnvPhaseS*i1ayOPixspS)
i1ayOPixS	tablei	iindex, gi1ayOPixtbl, 1
iindex = frac(i1aEnvPhaseE*i1ayOPixspE)
i1ayOPixE	tablei	iindex, gi1ayOPixtbl, 1
i1ayOPixS = i1ayOPixS*i1ayOPixmagS+i1ayOPixoffS
i1ayOPixE = i1ayOPixE*i1ayOPixmagE+i1ayOPixoffE

; final table lookup
i1ayOPS	tablei	i1ayOPixS, gi1ayOPtbl, 1, gi1ayOPtoff, gi1ayOPtwrap
i1ayOPS = i1ayOPS*i1ayOPmagS+i1ayOPoffS	; i1ayOPS is final output
i1ayOPE	tablei	i1ayOPixE, gi1ayOPtbl, 1, gi1ayOPtoff, gi1ayOPtwrap
i1ayOPE = i1ayOPE*i1ayOPmagE+i1ayOPoffE	; i1ayOPS is final output
printks "final i1ayOPS %.3f i1ayOPE %.3f\n", idur, i1ayOPS, i1ayOPE

; 1
iindex = frac(i1aEnvPhaseS*gi1ayOFmagixsp)
i1ayOFmagixS	tablei	iindex, gi1ayOFmagixtbl, 1
iindex = frac(i1aEnvPhaseE*gi1ayOFmagixsp)
i1ayOFmagixE	tablei	iindex, gi1ayOFmagixtbl, 1
i1ayOFmagixS = i1ayOFmagixS*gi1ayOFmagixmag+gi1ayOFmagixoff
i1ayOFmagixE = i1ayOFmagixE*gi1ayOFmagixmag+gi1ayOFmagixoff
i1ayOFmagS	tablei	i1ayOFmagixS, gi1ayOFmagtbl, 1, gi1ayOFmagtoff, gi1ayOFmagtwrap
i1ayOFmagE	tablei	i1ayOFmagixE, gi1ayOFmagtbl, 1, gi1ayOFmagtoff, gi1ayOFmagtwrap
i1ayOFmagS = i1ayOFmagS*gi1ayOFmagmag+gi1ayOFmagoff
i1ayOFmagE = i1ayOFmagE*gi1ayOFmagmag+gi1ayOFmagoff

; 2
iindex = frac(i1aEnvPhaseS*gi1ayOFoffixsp)
i1ayOFoffixS	tablei	iindex, gi1ayOFoffixtbl, 1
iindex = frac(i1aEnvPhaseS*gi1ayOFoffixsp)
i1ayOFoffixE	tablei	iindex, gi1ayOFoffixtbl, 1
i1ayOFoffixS = i1ayOFoffixS*gi1ayOFoffixmag+gi1ayOFoffixoff
i1ayOFoffixE = i1ayOFoffixE*gi1ayOFoffixmag+gi1ayOFoffixoff
i1ayOFoffS	tablei	i1ayOFoffixS, gi1ayOFofftbl, 1, gi1ayOFofftoff, gi1ayOFofftwrap
i1ayOFoffE	tablei	i1ayOFoffixE, gi1ayOFofftbl, 1, gi1ayOFofftoff, gi1ayOFofftwrap
i1ayOFoffS = i1ayOFoffS*gi1ayOFoffmag+gi1ayOFoffoff
i1ayOFoffE = i1ayOFoffE*gi1ayOFoffmag+gi1ayOFoffoff

; 3
iindex = frac(i1aEnvPhaseS*gi1ayOFixmagixsp)
i1ayOFixmagixS	tablei	iindex, gi1ayOFixmagixtbl, 1
iindex = frac(i1aEnvPhaseE*gi1ayOFixmagixsp)
i1ayOFixmagixE	tablei	iindex, gi1ayOFixmagixtbl, 1
i1ayOFixmagixS = i1ayOFixmagixS*gi1ayOFixmagixmag+gi1ayOFixmagixoff
i1ayOFixmagixE = i1ayOFixmagixE*gi1ayOFixmagixmag+gi1ayOFixmagixoff
i1ayOFixmagS	tablei	i1ayOFixmagixS, gi1ayOFixmagtbl, 1, gi1ayOFixmagtoff, gi1ayOFixmagtwrap
i1ayOFixmagE	tablei	i1ayOFixmagixE, gi1ayOFixmagtbl, 1, gi1ayOFixmagtoff, gi1ayOFixmagtwrap
i1ayOFixmagS = i1ayOFixmagS*gi1ayOFixmagmag+gi1ayOFixmagoff
i1ayOFixmagE = i1ayOFixmagE*gi1ayOFixmagmag+gi1ayOFixmagoff

; 4
iindex = frac(i1aEnvPhaseS*gi1ayOFixoffixsp)
i1ayOFixoffixS	tablei	iindex, gi1ayOFixoffixtbl, 1
iindex = frac(i1aEnvPhaseE*gi1ayOFixoffixsp)
i1ayOFixoffixE	tablei	iindex, gi1ayOFixoffixtbl, 1
i1ayOFixoffixS = i1ayOFixoffixS*gi1ayOFixoffixmag+gi1ayOFixoffixoff
i1ayOFixoffixE = i1ayOFixoffixE*gi1ayOFixoffixmag+gi1ayOFixoffixoff
i1ayOFixoffS	tablei	i1ayOFixoffixS, gi1ayOFixofftbl, 1, gi1ayOFixofftoff, gi1ayOFixofftwrap
i1ayOFixoffE	tablei	i1ayOFixoffixE, gi1ayOFixofftbl, 1, gi1ayOFixofftoff, gi1ayOFixofftwrap
i1ayOFixoffS = i1ayOFixoffS*gi1ayOFixoffmag+gi1ayOFixoffoff
i1ayOFixoffE = i1ayOFixoffE*gi1ayOFixoffmag+gi1ayOFixoffoff

; 5
iindex = frac(i1aEnvPhaseS*gi1ayOFixspixsp)
i1ayOFixspixS	tablei	iindex, gi1ayOFixspixtbl, 1
iindex = frac(i1aEnvPhaseE*gi1ayOFixspixsp)
i1ayOFixspixE	tablei	iindex, gi1ayOFixspixtbl, 1
i1ayOFixspixS = i1ayOFixspixS*gi1ayOFixspixmag+gi1ayOFixspixoff
i1ayOFixspixE = i1ayOFixspixE*gi1ayOFixspixmag+gi1ayOFixspixoff
i1ayOFixspS	tablei	i1ayOFixspixS, gi1ayOFixsptbl, 1, gi1ayOFixsptoff, gi1ayOFixsptwrap
i1ayOFixspE	tablei	i1ayOFixspixE, gi1ayOFixsptbl, 1, gi1ayOFixsptoff, gi1ayOFixsptwrap
i1ayOFixspS = i1ayOFixspS*gi1ayOFixspmag+gi1ayOFixspoff
i1ayOFixspE = i1ayOFixspE*gi1ayOFixspmag+gi1ayOFixspoff

; Finally do top-level indexing
iindex = frac(i1aEnvPhaseS*i1ayOFixspS)
i1ayOFixS	tablei	iindex, gi1ayOFixtbl, 1
iindex = frac(i1aEnvPhaseE*i1ayOFixspE)
i1ayOFixE	tablei	iindex, gi1ayOFixtbl, 1
i1ayOFixS = i1ayOFixS*i1ayOFixmagS+i1ayOFixoffS
i1ayOFixE = i1ayOFixE*i1ayOFixmagE+i1ayOFixoffE

; we can't put this in a macro since the forms are different for form and path
; path is an offset to form

; final table lookup
i1ayOFS	tablei	i1ayOFixS+i1ayOPS, gi1ayOFtbl, 1, gi1ayOFtoff, gi1ayOFtwrap
i1ayOFS = i1ayOFS*i1ayOFmagS+i1ayOFoffS	; i1ayOFS is final output
i1ayOFE	tablei	i1ayOFixE+i1ayOPE, gi1ayOFtbl, 1, gi1ayOFtoff, gi1ayOFtwrap
i1ayOFE = i1ayOFE*i1ayOFmagE+i1ayOFoffE	; i1ayOFS is final output

;printks "amp layer 1: i1ayOFS %.3f i1ayOFE %.3f\n", idur, i1ayOFS, i1ayOFE

;if giaNumTerrains<2 igoto initAmpTerrainDone

; amp terrain layer n initialisation

;initAmpTerrainDone:
#

; after Nelson, CS book
#define terrain
#
printks "terrain khn %.3f\n", 0.05, khn
;printks "Terrain period %.0f\n", idur, iterrainPeriod
;printks "giaNumTerrains %.0f gi1aEnvPhase %.0f\n", idur, giaNumTerrains, gi1aEnvPhase

if giaNumTerrains==0 && khn>inoscs kgoto endAmpTerrain
$terrainAmpLayer1	; returns harmonic amplitude factor gkamodamp
kamodamp_temp = gkamodamp
if giaNumTerrains<2 && khn==inoscs kgoto endAmpTerrain

;$terrainAmpLayer2
;kamodamp_temp = gkamodamp+kamodamp_temp
;if giaNumTerrains<3 && khn==inoscs kgoto endAmpTerrain

;$terrainAmpLayer<n>
;kamodamp_temp = gkamodamp+kamodamp_temp

; terrain values are additive, the sum multiplicative on the harmonic envelope
gkamodamp = kamodamp_temp*iatAutoScale	; rescale summed terrains
;display gkamodamp, idur
; Horner-Ayers contiguous group synthesis (modified)
;khpow	table	khn, 305	;  group synthesis envelope powers
; could experimentally use power of khn
;gkamodamp		pow		gkamodamp, khpow*giaxrptflag+1
endAmpTerrain:
#
; make this a whole macro for a single layer?
#define initAmpTerrain
#

; Layer 1
gi1axOFtbl				table	0, gi1axOFtable, 0
gi1axOFixtbl				table	1, gi1axOFtable, 0
gi1axOFtoff				table	2, gi1axOFtable, 0
gi1axOFtwrap				table	3, gi1axOFtable, 0

; 1
gi1axOFmagmag			table	4, gi1axOFtable, 0
gi1axOFmagoff				table	5, gi1axOFtable, 0
gi1axOFmagtbl				table	6, gi1axOFtable, 0
gi1axOFmagixmag			table	7, gi1axOFtable, 0
gi1axOFmagixoff			table	8, gi1axOFtable, 0
gi1axOFmagixtbl			table	9, gi1axOFtable, 0
gi1axOFmagtoff			table	10, gi1axOFtable, 0
gi1axOFmagtwrap			table	11, gi1axOFtable, 0
gi1axOFmagixsp			table	12, gi1axOFtable, 0

; 2
gi1axOFoffmag				table	13, gi1axOFtable, 0
gi1axOFoffoff				table	14, gi1axOFtable, 0
gi1axOFofftbl				table	15, gi1axOFtable, 0
gi1axOFoffixmag			table	16, gi1axOFtable, 0
gi1axOFoffixoff				table	17, gi1axOFtable, 0
gi1axOFoffixtbl				table	18, gi1axOFtable, 0
gi1axOFofftoff				table	19, gi1axOFtable, 0
gi1axOFofftwrap			table	20, gi1axOFtable, 0
gi1axOFoffixsp				table	21, gi1axOFtable, 0

; 3
gi1axOFixmagmag			table	22, gi1axOFtable, 0
gi1axOFixmagoff			table	23, gi1axOFtable, 0
gi1axOFixmagtbl			table	24, gi1axOFtable, 0
gi1axOFixmagixmag			table	25, gi1axOFtable, 0
gi1axOFixmagixoff			table	26, gi1axOFtable, 0
gi1axOFixmagixtbl			table	27, gi1axOFtable, 0
gi1axOFixmagtoff			table	28, gi1axOFtable, 0
gi1axOFixmagtwrap			table	29, gi1axOFtable, 0
gi1axOFixmagixsp			table	30, gi1axOFtable, 0

; 4
gi1axOFixoffmag			table	31, gi1axOFtable, 0
gi1axOFixoffoff				table	32, gi1axOFtable, 0
gi1axOFixofftbl				table	33, gi1axOFtable, 0
gi1axOFixoffixmag			table	34, gi1axOFtable, 0
gi1axOFixoffixoff			table	35, gi1axOFtable, 0
gi1axOFixoffixtbl			table	36, gi1axOFtable, 0
gi1axOFixofftoff			table	37, gi1axOFtable, 0
gi1axOFixofftwrap			table	38, gi1axOFtable, 0
gi1axOFixoffixsp			table	39, gi1axOFtable, 0

; 5
gi1axOFixspmag			table	40, gi1axOFtable, 0
gi1axOFixspoff				table	41, gi1axOFtable, 0
gi1axOFixsptbl				table	42, gi1axOFtable, 0
gi1axOFixspixmag			table	43, gi1axOFtable, 0
gi1axOFixspixoff			table	44, gi1axOFtable, 0
gi1axOFixspixtbl			table	45, gi1axOFtable, 0
gi1axOFixsptoff				table	46, gi1axOFtable, 0
gi1axOFixsptwrap			table	47, gi1axOFtable, 0
gi1axOFixspixsp			table	48, gi1axOFtable, 0

gi1ayOFtbl				table	0, gi1ayOFtable, 0
gi1ayOFixtbl				table	1, gi1ayOFtable, 0
gi1ayOFtoff				table	2, gi1ayOFtable, 0
gi1ayOFtwrap				table	3, gi1ayOFtable, 0

; 1
gi1ayOFmagmag			table	4, gi1ayOFtable, 0
gi1ayOFmagoff				table	5, gi1ayOFtable, 0
gi1ayOFmagtbl				table	6, gi1ayOFtable, 0
gi1ayOFmagixmag			table	7, gi1ayOFtable, 0
gi1ayOFmagixoff			table	8, gi1ayOFtable, 0
gi1ayOFmagixtbl			table	9, gi1ayOFtable, 0
gi1ayOFmagtoff			table	10, gi1ayOFtable, 0
gi1ayOFmagtwrap			table	11, gi1ayOFtable, 0
gi1ayOFmagixsp			table	12, gi1ayOFtable, 0

; 2
gi1ayOFoffmag				table	13, gi1ayOFtable, 0
gi1ayOFoffoff				table	14, gi1ayOFtable, 0
gi1ayOFofftbl				table	15, gi1ayOFtable, 0
gi1ayOFoffixmag			table	16, gi1ayOFtable, 0
gi1ayOFoffixoff				table	17, gi1ayOFtable, 0
gi1ayOFoffixtbl				table	18, gi1ayOFtable, 0
gi1ayOFofftoff				table	19, gi1ayOFtable, 0
gi1ayOFofftwrap			table	20, gi1ayOFtable, 0
gi1ayOFoffixsp				table	21, gi1ayOFtable, 0

; 3
gi1ayOFixmagmag			table	22, gi1ayOFtable, 0
gi1ayOFixmagoff			table	23, gi1ayOFtable, 0
gi1ayOFixmagtbl			table	24, gi1ayOFtable, 0
gi1ayOFixmagixmag			table	25, gi1ayOFtable, 0
gi1ayOFixmagixoff			table	26, gi1ayOFtable, 0
gi1ayOFixmagixtbl			table	27, gi1ayOFtable, 0
gi1ayOFixmagtoff			table	28, gi1ayOFtable, 0
gi1ayOFixmagtwrap			table	29, gi1ayOFtable, 0
gi1ayOFixmagixsp			table	30, gi1ayOFtable, 0

; 4
gi1ayOFixoffmag			table	31, gi1ayOFtable, 0
gi1ayOFixoffoff				table	32, gi1ayOFtable, 0
gi1ayOFixofftbl				table	33, gi1ayOFtable, 0
gi1ayOFixoffixmag			table	34, gi1ayOFtable, 0
gi1ayOFixoffixoff			table	35, gi1ayOFtable, 0
gi1ayOFixoffixtbl			table	36, gi1ayOFtable, 0
gi1ayOFixofftoff			table	37, gi1ayOFtable, 0
gi1ayOFixofftwrap			table	38, gi1ayOFtable, 0
gi1ayOFixoffixsp			table	39, gi1ayOFtable, 0

; 5
gi1ayOFixspmag			table	40, gi1ayOFtable, 0
gi1ayOFixspoff				table	41, gi1ayOFtable, 0
gi1ayOFixsptbl				table	42, gi1ayOFtable, 0
gi1ayOFixspixmag			table	43, gi1ayOFtable, 0
gi1ayOFixspixoff			table	44, gi1ayOFtable, 0
gi1ayOFixspixtbl			table	45, gi1ayOFtable, 0
gi1ayOFixsptoff				table	46, gi1ayOFtable, 0
gi1ayOFixsptwrap			table	47, gi1ayOFtable, 0
gi1ayOFixspixsp			table	48, gi1ayOFtable, 0

gi1axOPtbl				table	0, gi1axOPtable, 0
gi1axOPixtbl				table	1, gi1axOPtable, 0
gi1axOPtoff				table	2, gi1axOPtable, 0
gi1axOPtwrap				table	3, gi1axOPtable, 0

; 1
gi1axOPmagmag			table	4, gi1axOPtable, 0
gi1axOPmagoff				table	5, gi1axOPtable, 0
gi1axOPmagtbl				table	6, gi1axOPtable, 0
gi1axOPmagixmag			table	7, gi1axOPtable, 0
gi1axOPmagixoff			table	8, gi1axOPtable, 0
gi1axOPmagixtbl			table	9, gi1axOPtable, 0
gi1axOPmagtoff			table	10, gi1axOPtable, 0
gi1axOPmagtwrap			table	11, gi1axOPtable, 0
gi1axOPmagixsp			table	12, gi1axOPtable, 0

; 2
gi1axOPoffmag				table	13, gi1axOPtable, 0
gi1axOPoffoff				table	14, gi1axOPtable, 0
gi1axOPofftbl				table	15, gi1axOPtable, 0
gi1axOPoffixmag			table	16, gi1axOPtable, 0
gi1axOPoffixoff				table	17, gi1axOPtable, 0
gi1axOPoffixtbl				table	18, gi1axOPtable, 0
gi1axOPofftoff				table	19, gi1axOPtable, 0
gi1axOPofftwrap			table	20, gi1axOPtable, 0
gi1axOPoffixsp				table	21, gi1axOPtable, 0

; 3
gi1axOPixmagmag			table	22, gi1axOPtable, 0
gi1axOPixmagoff			table	23, gi1axOPtable, 0
gi1axOPixmagtbl			table	24, gi1axOPtable, 0
gi1axOPixmagixmag			table	25, gi1axOPtable, 0
gi1axOPixmagixoff			table	26, gi1axOPtable, 0
gi1axOPixmagixtbl			table	27, gi1axOPtable, 0
gi1axOPixmagtoff			table	28, gi1axOPtable, 0
gi1axOPixmagtwrap			table	29, gi1axOPtable, 0
gi1axOPixmagixsp			table	30, gi1axOPtable, 0

; 4
gi1axOPixoffmag			table	31, gi1axOPtable, 0
gi1axOPixoffoff				table	32, gi1axOPtable, 0
gi1axOPixofftbl				table	33, gi1axOPtable, 0
gi1axOPixoffixmag			table	34, gi1axOPtable, 0
gi1axOPixoffixoff			table	35, gi1axOPtable, 0
gi1axOPixoffixtbl			table	36, gi1axOPtable, 0
gi1axOPixofftoff			table	37, gi1axOPtable, 0
gi1axOPixofftwrap			table	38, gi1axOPtable, 0
gi1axOPixoffixsp			table	39, gi1axOPtable, 0

; 5
gi1axOPixspmag			table	40, gi1axOPtable, 0
gi1axOPixspoff				table	41, gi1axOPtable, 0
gi1axOPixsptbl				table	42, gi1axOPtable, 0
gi1axOPixspixmag			table	43, gi1axOPtable, 0
gi1axOPixspixoff			table	44, gi1axOPtable, 0
gi1axOPixspixtbl			table	45, gi1axOPtable, 0
gi1axOPixsptoff				table	46, gi1axOPtable, 0
gi1axOPixsptwrap			table	47, gi1axOPtable, 0
gi1axOPixspixsp			table	48, gi1axOPtable, 0

gi1ayOPtbl				table	0, gi1ayOPtable, 0
gi1ayOPixtbl				table	1, gi1ayOPtable, 0
gi1ayOPtoff				table	2, gi1ayOPtable, 0
gi1ayOPtwrap				table	3, gi1ayOPtable, 0

; 1
gi1ayOPmagmag			table	4, gi1ayOPtable, 0
gi1ayOPmagoff				table	5, gi1ayOPtable, 0
gi1ayOPmagtbl				table	6, gi1ayOPtable, 0
gi1ayOPmagixmag			table	7, gi1ayOPtable, 0
gi1ayOPmagixoff			table	8, gi1ayOPtable, 0
gi1ayOPmagixtbl			table	9, gi1ayOPtable, 0
gi1ayOPmagtoff			table	10, gi1ayOPtable, 0
gi1ayOPmagtwrap			table	11, gi1ayOPtable, 0
gi1ayOPmagixsp			table	12, gi1ayOPtable, 0

; 2
gi1ayOPoffmag				table	13, gi1ayOPtable, 0
gi1ayOPoffoff				table	14, gi1ayOPtable, 0
gi1ayOPofftbl				table	15, gi1ayOPtable, 0
gi1ayOPoffixmag			table	16, gi1ayOPtable, 0
gi1ayOPoffixoff				table	17, gi1ayOPtable, 0
gi1ayOPoffixtbl				table	18, gi1ayOPtable, 0
gi1ayOPofftoff				table	19, gi1ayOPtable, 0
gi1ayOPofftwrap			table	20, gi1ayOPtable, 0
gi1ayOPoffixsp				table	21, gi1ayOPtable, 0

; 3
gi1ayOPixmagmag			table	22, gi1ayOPtable, 0
gi1ayOPixmagoff			table	23, gi1ayOPtable, 0
gi1ayOPixmagtbl			table	24, gi1ayOPtable, 0
gi1ayOPixmagixmag			table	25, gi1ayOPtable, 0
gi1ayOPixmagixoff			table	26, gi1ayOPtable, 0
gi1ayOPixmagixtbl			table	27, gi1ayOPtable, 0
gi1ayOPixmagtoff			table	28, gi1ayOPtable, 0
gi1ayOPixmagtwrap			table	29, gi1ayOPtable, 0
gi1ayOPixmagixsp			table	30, gi1ayOPtable, 0

; 4
gi1ayOPixoffmag			table	31, gi1ayOPtable, 0
gi1ayOPixoffoff				table	32, gi1ayOPtable, 0
gi1ayOPixofftbl				table	33, gi1ayOPtable, 0
gi1ayOPixoffixmag			table	34, gi1ayOPtable, 0
gi1ayOPixoffixoff			table	35, gi1ayOPtable, 0
gi1ayOPixoffixtbl			table	36, gi1ayOPtable, 0
gi1ayOPixofftoff			table	37, gi1ayOPtable, 0
gi1ayOPixofftwrap			table	38, gi1ayOPtable, 0
gi1ayOPixoffixsp			table	39, gi1ayOPtable, 0

; 5
gi1ayOPixspmag			table	40, gi1ayOPtable, 0
gi1ayOPixspoff				table	41, gi1ayOPtable, 0
gi1ayOPixsptbl				table	42, gi1ayOPtable, 0
gi1ayOPixspixmag			table	43, gi1ayOPtable, 0
gi1ayOPixspixoff			table	44, gi1ayOPtable, 0
gi1ayOPixspixtbl			table	45, gi1ayOPtable, 0
gi1ayOPixsptoff				table	46, gi1ayOPtable, 0
gi1ayOPixsptwrap			table	47, gi1ayOPtable, 0
gi1ayOPixspixsp			table	48, gi1ayOPtable, 0

; default modify whole note
; no offset, phase correct at note start
i1aTerrainDur = idur
i1aEnvPhaseS = $mindur	; avoid table termination due to zero duration
i1aEnvPhaseE = idur
if gi1aEnvPhase==0 igoto amp1EPdone

if gi1aEnvPhase>1 igoto amp1EP2
; attack phase
i1aTerrainDur = iaeattack
i1aEnvPhaseS = $mindur
i1aEnvPhaseE = iaeattack
igoto amp1EPdone

amp1EP2:
if gi1aEnvPhase>2 igoto amp1EP3
; post-attack phase
; either dcl or dcy+sus+rls
i1aTerrainDur = (giusrdclphs==0 ? iaedecline : idur-iaeattack)
i1aEnvPhaseS = iaeattack
i1aEnvPhaseE = idur
igoto amp1EPdone

amp1EP3:
if giusrdclphs==0 igoto amp1EPdone
if gi1aEnvPhase>3 igoto amp1EP4
; decay phase
i1aTerrainDur = iaedecay
i1aEnvPhaseS = iaeattack
i1aEnvPhaseE = idur--iaesustain-iaerelease
igoto amp1EPdone

amp1EP4:
if gi1aEnvPhase>4 igoto amp1EP5
; sustain phase
i1aTerrainDur = iaesustain
i1aEnvPhaseS = iaeattack+iaedecay
i1aEnvPhaseE = idur-iaerelease
igoto amp1EPdone

amp1EP5:
if gi1aEnvPhase>5 igoto amp1EP6
; release phase
i1aTerrainDur = iaerelease
i1aEnvPhaseS = idur-iaerelease
i1aEnvPhaseE = idur
igoto amp1EPdone

amp1EP6:
if gi1aEnvPhase>6 igoto amp1EP7
; decay+sustain phases
i1aTerrainDur = iaedecay+iaesustain
i1aEnvPhaseS = iaeattack
i1aEnvPhaseE = idur-iaerelease
igoto amp1EPdone

amp1EP7:
; sustain+release phases
i1aTerrainDur = iaesustain+iaerelease
i1aEnvPhaseS = iaeattack+iaedecay
i1aEnvPhaseE = idur

amp1EPdone:

; period: n >= 0, n/duration (iterrainPeriod); n < 0, frequency (Hz)
; default: note frequency linkage?
; what about amp linkage?
; we need these for the terrain indexing to be dynamic; here it is only related
; to fixed freq/note duration

; note: these do similar jon: another macro
gi1axOFmagixsp = (gi1axOFmagixsp<0 ? abs(gi1axOFmagixsp) : gi1axOFmagixsp/i1aTerrainDur)
gi1axOFoffixsp = (gi1axOFoffixsp<0 ? abs(gi1axOFoffixsp) : gi1axOFoffixsp/i1aTerrainDur)
gi1axOFixmagixsp = (gi1axOFixmagixsp<0 ? abs(gi1axOFixmagixsp) : gi1axOFixmagixsp/i1aTerrainDur)
gi1axOFixoffixsp = (gi1axOFixoffixsp<0 ? abs(gi1axOFixoffixsp) : gi1axOFixoffixsp/i1aTerrainDur)
gi1axOFixspixsp = (gi1axOFixspixsp<0 ? abs(gi1axOFixspixsp) : gi1axOFixspixsp/i1aTerrainDur)
gi1axOFixspixmag = (gi1axOFixspixmag<0? abs(gi1axOFixspixmag) : gi1axOFixspixmag/i1aTerrainDur)
gi1axOFixspmag = (gi1axOFixspmag<0? abs(gi1axOFixspmag) : gi1axOFixspmag/i1aTerrainDur)

gi1ayOFmagixsp = (gi1ayOFmagixsp<0 ? abs(gi1ayOFmagixsp) : gi1ayOFmagixsp/i1aTerrainDur)
gi1ayOFoffixsp = (gi1ayOFoffixsp<0 ? abs(gi1ayOFoffixsp) : gi1ayOFoffixsp/i1aTerrainDur)
gi1ayOFixmagixsp = (gi1ayOFixmagixsp<0 ? abs(gi1ayOFixmagixsp) : gi1ayOFixmagixsp/i1aTerrainDur)
gi1ayOFixoffixsp = (gi1ayOFixoffixsp<0 ? abs(gi1ayOFixoffixsp) : gi1ayOFixoffixsp/i1aTerrainDur)
gi1ayOFixspixsp = (gi1ayOFixspixsp<0 ? abs(gi1ayOFixspixsp) : gi1ayOFixspixsp/i1aTerrainDur)
gi1ayOFixspixmag = (gi1ayOFixspixmag<0? abs(gi1ayOFixspixmag) : gi1ayOFixspixmag/i1aTerrainDur)
gi1ayOFixspmag = (gi1ayOFixspmag<0? abs(gi1ayOFixspmag) : gi1ayOFixspmag/i1aTerrainDur)

gi1axOPmagixsp = (gi1axOPmagixsp<0 ? abs(gi1axOPmagixsp) : gi1axOPmagixsp/i1aTerrainDur)
gi1axOPoffixsp = (gi1axOPoffixsp<0 ? abs(gi1axOPoffixsp) : gi1axOPoffixsp/i1aTerrainDur)
gi1axOPixmagixsp = (gi1axOPixmagixsp<0 ? abs(gi1axOPixmagixsp) : gi1axOPixmagixsp/i1aTerrainDur)
gi1axOPixoffixsp = (gi1axOPixoffixsp<0 ? abs(gi1axOPixoffixsp) : gi1axOPixoffixsp/i1aTerrainDur)
gi1axOPixspixsp = (gi1axOPixspixsp<0 ? abs(gi1axOPixspixsp) : gi1axOPixspixsp/i1aTerrainDur)
gi1axOPixspixmag = (gi1axOPixspixmag<0? abs(gi1axOPixspixmag) : gi1axOPixspixmag/i1aTerrainDur)
gi1axOPixspmag = (gi1axOPixspmag<0? abs(gi1axOPixspmag) : gi1axOPixspmag/i1aTerrainDur)

gi1ayOPmagixsp = (gi1ayOPmagixsp<0 ? abs(gi1ayOPmagixsp) : gi1ayOPmagixsp/i1aTerrainDur)
gi1ayOPoffixsp = (gi1ayOPoffixsp<0 ? abs(gi1ayOPoffixsp) : gi1ayOPoffixsp/i1aTerrainDur)
gi1ayOPixmagixsp = (gi1ayOPixmagixsp<0 ? abs(gi1ayOPixmagixsp) : gi1ayOPixmagixsp/i1aTerrainDur)
gi1ayOPixoffixsp = (gi1ayOPixoffixsp<0 ? abs(gi1ayOPixoffixsp) : gi1ayOPixoffixsp/i1aTerrainDur)
gi1ayOPixspixsp = (gi1ayOPixspixsp<0 ? abs(gi1ayOPixspixsp) : gi1ayOPixspixsp/i1aTerrainDur)
gi1ayOPixspixmag = (gi1ayOPixspixmag<0? abs(gi1ayOPixspixmag) : gi1ayOPixspixmag/i1aTerrainDur)
gi1ayOPixspmag = (gi1ayOPixspmag<0? abs(gi1ayOPixspmag) : gi1ayOPixspmag/i1aTerrainDur)

; better off making this lot a separate macro
; amp terrain layer 1 function endpoint values
; gi1aEnvPhase
; 1
iindex = frac(i1aEnvPhaseS*gi1axOPmagixsp)
i1axOPmagixS	tablei	iindex, gi1axOPmagixtbl, 1
iindex = frac(i1aEnvPhaseE*gi1axOPmagixsp)
i1axOPmagixE	tablei	iindex, gi1axOPmagixtbl, 1
i1axOPmagixS = i1axOPmagixS*gi1axOPmagixmag+gi1axOPmagixoff
i1axOPmagixE = i1axOPmagixE*gi1axOPmagixmag+gi1axOPmagixoff
i1axOPmagS	tablei	i1axOPmagixS, gi1axOPmagtbl, 1, gi1axOPmagtoff, gi1axOPmagtwrap
i1axOPmagE	tablei	i1axOPmagixE, gi1axOPmagtbl, 1, gi1axOPmagtoff, gi1axOPmagtwrap
i1axOPmagS = i1axOPmagS*gi1axOPmagmag+gi1axOPmagoff
i1axOPmagE = i1axOPmagE*gi1axOPmagmag+gi1axOPmagoff

; 2
iindex = frac(i1aEnvPhaseS*gi1axOPoffixsp)
i1axOPoffixS	tablei	iindex, gi1axOPoffixtbl, 1
iindex = frac(i1aEnvPhaseS*gi1axOPoffixsp)
i1axOPoffixE	tablei	iindex, gi1axOPoffixtbl, 1
i1axOPoffixS = i1axOPoffixS*gi1axOPoffixmag+gi1axOPoffixoff
i1axOPoffixE = i1axOPoffixE*gi1axOPoffixmag+gi1axOPoffixoff
i1axOPoffS	tablei	i1axOPoffixS, gi1axOPofftbl, 1, gi1axOPofftoff, gi1axOPofftwrap
i1axOPoffE	tablei	i1axOPoffixE, gi1axOPofftbl, 1, gi1axOPofftoff, gi1axOPofftwrap
i1axOPoffS = i1axOPoffS*gi1axOPoffmag+gi1axOPoffoff
i1axOPoffE = i1axOPoffE*gi1axOPoffmag+gi1axOPoffoff

; 3
iindex = frac(i1aEnvPhaseS*gi1axOPixmagixsp)
i1axOPixmagixS	tablei	iindex, gi1axOPixmagixtbl, 1
iindex = frac(i1aEnvPhaseE*gi1axOPixmagixsp)
i1axOPixmagixE	tablei	iindex, gi1axOPixmagixtbl, 1
i1axOPixmagixS = i1axOPixmagixS*gi1axOPixmagixmag+gi1axOPixmagixoff
i1axOPixmagixE = i1axOPixmagixE*gi1axOPixmagixmag+gi1axOPixmagixoff
i1axOPixmagS	tablei	i1axOPixmagixS, gi1axOPixmagtbl, 1, gi1axOPixmagtoff, gi1axOPixmagtwrap
i1axOPixmagE	tablei	i1axOPixmagixE, gi1axOPixmagtbl, 1, gi1axOPixmagtoff, gi1axOPixmagtwrap
axOPixmagS = i1axOPixmagS*gi1axOPixmagmag+gi1axOPixmagoff
i1axOPixmagE = i1axOPixmagE*gi1axOPixmagmag+gi1axOPixmagoff

; 4
iindex = frac(i1aEnvPhaseS*gi1axOPixoffixsp)
i1axOPixoffixS	tablei	iindex, gi1axOPixoffixtbl, 1
iindex = frac(i1aEnvPhaseE*gi1axOPixoffixsp)
i1axOPixoffixE	tablei	iindex, gi1axOPixoffixtbl, 1
i1axOPixoffixS = i1axOPixoffixS*gi1axOPixoffixmag+gi1axOPixoffixoff
i1axOPixoffixE = i1axOPixoffixE*gi1axOPixoffixmag+gi1axOPixoffixoff
i1axOPixoffS	tablei	i1axOPixoffixS, gi1axOPixofftbl, 1, gi1axOPixofftoff, gi1axOPixofftwrap
i1axOPixoffE	tablei	i1axOPixoffixE, gi1axOPixofftbl, 1, gi1axOPixofftoff, gi1axOPixofftwrap
i1axOPixoffS = i1axOPixoffS*gi1axOPixoffmag+gi1axOPixoffoff
i1axOPixoffE = i1axOPixoffE*gi1axOPixoffmag+gi1axOPixoffoff

; 5
iindex = frac(i1aEnvPhaseS*gi1axOPixspixsp)
i1axOPixspixS	tablei	iindex, gi1axOPixspixtbl, 1
iindex = frac(i1aEnvPhaseE*gi1axOPixspixsp)
i1axOPixspixE	tablei	iindex, gi1axOPixspixtbl, 1
i1axOPixspixS = i1axOPixspixS*gi1axOPixspixmag+gi1axOPixspixoff
i1axOPixspixE = i1axOPixspixE*gi1axOPixspixmag+gi1axOPixspixoff
i1axOPixspS	tablei	i1axOPixspixS, gi1axOPixsptbl, 1, gi1axOPixsptoff, gi1axOPixsptwrap
i1axOPixspE	tablei	i1axOPixspixE, gi1axOPixsptbl, 1, gi1axOPixsptoff, gi1axOPixsptwrap
i1axOPixspS = i1axOPixspS*gi1axOPixspmag+gi1axOPixspoff
i1axOPixspE = i1axOPixspE*gi1axOPixspmag+gi1axOPixspoff

; Finally do top-level indexing
iindex = frac(i1aEnvPhaseS*i1axOPixspS)
i1axOPixS	tablei	iindex, gi1axOPixtbl, 1
iindex = frac(i1aEnvPhaseE*i1axOPixspE)
i1axOPixE	tablei	iindex, gi1axOPixtbl, 1
i1axOPixS = i1axOPixS*i1axOPixmagS+i1axOPixoffS
i1axOPixE = i1axOPixE*i1axOPixmagE+i1axOPixoffE

; final table lookup
i1axOPS	tablei	i1axOPixS, gi1axOPtbl, 1, gi1axOPtoff, gi1axOPtwrap
i1axOPS = i1axOPS*i1axOPmagS+i1axOPoffS	; i1axOPS is final output
i1axOPE	tablei	i1axOPixE, gi1axOPtbl, 1, gi1axOPtoff, gi1axOPtwrap
i1axOPE = i1axOPE*i1axOPmagE+i1axOPoffE	; i1axOPS is final output
;printks "amp layer 1: i1axOPS %.3f i1axOPE %.3f\n", idur, i1axOPS, i1axOPE

; 1
iindex = frac(i1aEnvPhaseS*gi1axOFmagixsp)
i1axOFmagixS	tablei	iindex, gi1axOFmagixtbl, 1
iindex = frac(i1aEnvPhaseE*gi1axOFmagixsp)
i1axOFmagixE	tablei	iindex, gi1axOFmagixtbl, 1
i1axOFmagixS = i1axOFmagixS*gi1axOFmagixmag+gi1axOFmagixoff
i1axOFmagixE = i1axOFmagixE*gi1axOFmagixmag+gi1axOFmagixoff
i1axOFmagS	tablei	i1axOFmagixS, gi1axOFmagtbl, 1, gi1axOFmagtoff, gi1axOFmagtwrap
i1axOFmagE	tablei	i1axOFmagixE, gi1axOFmagtbl, 1, gi1axOFmagtoff, gi1axOFmagtwrap
i1axOFmagS = i1axOFmagS*gi1axOFmagmag+gi1axOFmagoff
i1axOFmagE = i1axOFmagE*gi1axOFmagmag+gi1axOFmagoff

; 2
iindex = frac(i1aEnvPhaseS*gi1axOFoffixsp)
i1axOFoffixS	tablei	iindex, gi1axOFoffixtbl, 1
iindex = frac(i1aEnvPhaseS*gi1axOFoffixsp)
i1axOFoffixE	tablei	iindex, gi1axOFoffixtbl, 1
i1axOFoffixS = i1axOFoffixS*gi1axOFoffixmag+gi1axOFoffixoff
i1axOFoffixE = i1axOFoffixE*gi1axOFoffixmag+gi1axOFoffixoff
i1axOFoffS	tablei	i1axOFoffixS, gi1axOFofftbl, 1, gi1axOFofftoff, gi1axOFofftwrap
i1axOFoffE	tablei	i1axOFoffixE, gi1axOFofftbl, 1, gi1axOFofftoff, gi1axOFofftwrap
i1axOFoffS = i1axOFoffS*gi1axOFoffmag+gi1axOFoffoff
i1axOFoffE = i1axOFoffE*gi1axOFoffmag+gi1axOFoffoff

; 3
iindex = frac(i1aEnvPhaseS*gi1axOFixmagixsp)
i1axOFixmagixS	tablei	iindex, gi1axOFixmagixtbl, 1
iindex = frac(i1aEnvPhaseE*gi1axOFixmagixsp)
i1axOFixmagixE	tablei	iindex, gi1axOFixmagixtbl, 1
i1axOFixmagixS = i1axOFixmagixS*gi1axOFixmagixmag+gi1axOFixmagixoff
i1axOFixmagixE = i1axOFixmagixE*gi1axOFixmagixmag+gi1axOFixmagixoff
i1axOFixmagS	tablei	i1axOFixmagixS, gi1axOFixmagtbl, 1, gi1axOFixmagtoff, gi1axOFixmagtwrap
i1axOFixmagE	tablei	i1axOFixmagixE, gi1axOFixmagtbl, 1, gi1axOFixmagtoff, gi1axOFixmagtwrap
i1axOFixmagS = i1axOFixmagS*gi1axOFixmagmag+gi1axOFixmagoff
i1axOFixmagE = i1axOFixmagE*gi1axOFixmagmag+gi1axOFixmagoff

; 4
iindex = frac(i1aEnvPhaseS*gi1axOFixoffixsp)
i1axOFixoffixS	tablei	iindex, gi1axOFixoffixtbl, 1
iindex = frac(i1aEnvPhaseE*gi1axOFixoffixsp)
i1axOFixoffixE	tablei	iindex, gi1axOFixoffixtbl, 1
i1axOFixoffixS = i1axOFixoffixS*gi1axOFixoffixmag+gi1axOFixoffixoff
i1axOFixoffixE = i1axOFixoffixE*gi1axOFixoffixmag+gi1axOFixoffixoff
i1axOFixoffS	tablei	i1axOFixoffixS, gi1axOFixofftbl, 1, gi1axOFixofftoff, gi1axOFixofftwrap
i1axOFixoffE	tablei	i1axOFixoffixE, gi1axOFixofftbl, 1, gi1axOFixofftoff, gi1axOFixofftwrap
i1axOFixoffS = i1axOFixoffS*gi1axOFixoffmag+gi1axOFixoffoff
i1axOFixoffE = i1axOFixoffE*gi1axOFixoffmag+gi1axOFixoffoff

; 5
iindex = frac(i1aEnvPhaseS*gi1axOFixspixsp)
i1axOFixspixS	tablei	iindex, gi1axOFixspixtbl, 1
iindex = frac(i1aEnvPhaseE*gi1axOFixspixsp)
i1axOFixspixE	tablei	iindex, gi1axOFixspixtbl, 1
i1axOFixspixS = i1axOFixspixS*gi1axOFixspixmag+gi1axOFixspixoff
i1axOFixspixE = i1axOFixspixE*gi1axOFixspixmag+gi1axOFixspixoff
i1axOFixspS	tablei	i1axOFixspixS, gi1axOFixsptbl, 1, gi1axOFixsptoff, gi1axOFixsptwrap
i1axOFixspE	tablei	i1axOFixspixE, gi1axOFixsptbl, 1, gi1axOFixsptoff, gi1axOFixsptwrap
i1axOFixspS = i1axOFixspS*gi1axOFixspmag+gi1axOFixspoff
i1axOFixspE = i1axOFixspE*gi1axOFixspmag+gi1axOFixspoff

; Finally do top-level indexing
iindex = frac(i1aEnvPhaseS*i1axOFixspS)
i1axOFixS	tablei	iindex, gi1axOFixtbl, 1
iindex = frac(i1aEnvPhaseE*i1axOFixspE)
i1axOFixE	tablei	iindex, gi1axOFixtbl, 1
i1axOFixS = i1axOFixS*i1axOFixmagS+i1axOFixoffS
i1axOFixE = i1axOFixE*i1axOFixmagE+i1axOFixoffE

; see note below: can't put htis sect in a macro
; final table lookup
i1axOFS	tablei	i1axOFixS+i1axOPS, gi1axOFtbl, 1, gi1axOFtoff, gi1axOFtwrap
i1axOFS = i1axOFS*i1axOFmagS+i1axOFoffS	; i1axOFS is final output
i1axOFE	tablei	i1axOFixE+i1axOPE, gi1axOFtbl, 1, gi1axOFtoff, gi1axOFtwrap
i1axOFE = i1axOFE*i1axOFmagE+i1axOFoffE	; i1axOFS is final output
printks "final i1axOFS %.3f i1axOFE %.3f\n", idur, i1axOFS, i1axOFE

; now we need to do the whole lot again for the y functions
; 1
iindex = frac(i1aEnvPhaseS*gi1ayOPmagixsp)
i1ayOPmagixS	tablei	iindex, gi1ayOPmagixtbl, 1
iindex = frac(i1aEnvPhaseE*gi1ayOPmagixsp)
i1ayOPmagixE	tablei	iindex, gi1ayOPmagixtbl, 1
i1ayOPmagixS = i1ayOPmagixS*gi1ayOPmagixmag+gi1ayOPmagixoff
i1ayOPmagixE = i1ayOPmagixE*gi1ayOPmagixmag+gi1ayOPmagixoff
i1ayOPmagS	tablei	i1ayOPmagixS, gi1ayOPmagtbl, 1, gi1ayOPmagtoff, gi1ayOPmagtwrap
i1ayOPmagE	tablei	i1ayOPmagixE, gi1ayOPmagtbl, 1, gi1ayOPmagtoff, gi1ayOPmagtwrap
i1ayOPmagS = i1ayOPmagS*gi1ayOPmagmag+gi1ayOPmagoff
i1ayOPmagE = i1ayOPmagE*gi1ayOPmagmag+gi1ayOPmagoff

; 2
iindex = frac(i1aEnvPhaseS*gi1ayOPoffixsp)
i1ayOPoffixS	tablei	iindex, gi1ayOPoffixtbl, 1
iindex = frac(i1aEnvPhaseS*gi1ayOPoffixsp)
i1ayOPoffixE	tablei	iindex, gi1ayOPoffixtbl, 1
i1ayOPoffixS = i1ayOPoffixS*gi1ayOPoffixmag+gi1ayOPoffixoff
i1ayOPoffixE = i1ayOPoffixE*gi1ayOPoffixmag+gi1ayOPoffixoff
i1ayOPoffS	tablei	i1ayOPoffixS, gi1ayOPofftbl, 1, gi1ayOPofftoff, gi1ayOPofftwrap
i1ayOPoffE	tablei	i1ayOPoffixE, gi1ayOPofftbl, 1, gi1ayOPofftoff, gi1ayOPofftwrap
i1ayOPoffS = i1ayOPoffS*gi1ayOPoffmag+gi1ayOPoffoff
i1ayOPoffE = i1ayOPoffE*gi1ayOPoffmag+gi1ayOPoffoff

; 3
iindex = frac(i1aEnvPhaseS*gi1ayOPixmagixsp)
i1ayOPixmagixS	tablei	iindex, gi1ayOPixmagixtbl, 1
iindex = frac(i1aEnvPhaseE*gi1ayOPixmagixsp)
i1ayOPixmagixE	tablei	iindex, gi1ayOPixmagixtbl, 1
i1ayOPixmagixS = i1ayOPixmagixS*gi1ayOPixmagixmag+gi1ayOPixmagixoff
i1ayOPixmagixE = i1ayOPixmagixE*gi1ayOPixmagixmag+gi1ayOPixmagixoff
i1ayOPixmagS	tablei	i1ayOPixmagixS, gi1ayOPixmagtbl, 1, gi1ayOPixmagtoff, gi1ayOPixmagtwrap
i1ayOPixmagE	tablei	i1ayOPixmagixE, gi1ayOPixmagtbl, 1, gi1ayOPixmagtoff, gi1ayOPixmagtwrap
i1ayOPixmagS = i1ayOPixmagS*gi1ayOPixmagmag+gi1ayOPixmagoff
i1ayOPixmagE = i1ayOPixmagE*gi1ayOPixmagmag+gi1ayOPixmagoff

; 4
iindex = frac(i1aEnvPhaseS*gi1ayOPixoffixsp)
i1ayOPixoffixS	tablei	iindex, gi1ayOPixoffixtbl, 1
iindex = frac(i1aEnvPhaseE*gi1ayOPixoffixsp)
i1ayOPixoffixE	tablei	iindex, gi1ayOPixoffixtbl, 1
i1ayOPixoffixS = i1ayOPixoffixS*gi1ayOPixoffixmag+gi1ayOPixoffixoff
i1ayOPixoffixE = i1ayOPixoffixE*gi1ayOPixoffixmag+gi1ayOPixoffixoff
i1ayOPixoffS	tablei	i1ayOPixoffixS, gi1ayOPixofftbl, 1, gi1ayOPixofftoff, gi1ayOPixofftwrap
i1ayOPixoffE	tablei	i1ayOPixoffixE, gi1ayOPixofftbl, 1, gi1ayOPixofftoff, gi1ayOPixofftwrap
i1ayOPixoffS = i1ayOPixoffS*gi1ayOPixoffmag+gi1ayOPixoffoff
i1ayOPixoffE = i1ayOPixoffE*gi1ayOPixoffmag+gi1ayOPixoffoff

; 5
iindex = frac(i1aEnvPhaseS*gi1ayOPixspixsp)
i1ayOPixspixS	tablei	iindex, gi1ayOPixspixtbl, 1
iindex = frac(i1aEnvPhaseE*gi1ayOPixspixsp)
i1ayOPixspixE	tablei	iindex, gi1ayOPixspixtbl, 1
i1ayOPixspixS = i1ayOPixspixS*gi1ayOPixspixmag+gi1ayOPixspixoff
i1ayOPixspixE = i1ayOPixspixE*gi1ayOPixspixmag+gi1ayOPixspixoff
i1ayOPixspS	tablei	i1ayOPixspixS, gi1ayOPixsptbl, 1, gi1ayOPixsptoff, gi1ayOPixsptwrap
i1ayOPixspE	tablei	i1ayOPixspixE, gi1ayOPixsptbl, 1, gi1ayOPixsptoff, gi1ayOPixsptwrap
i1ayOPixspS = i1ayOPixspS*gi1ayOPixspmag+gi1ayOPixspoff
i1ayOPixspE = i1ayOPixspE*gi1ayOPixspmag+gi1ayOPixspoff

; Finally do top-level indexing
iindex = frac(i1aEnvPhaseS*i1ayOPixspS)
i1ayOPixS	tablei	iindex, gi1ayOPixtbl, 1
iindex = frac(i1aEnvPhaseE*i1ayOPixspE)
i1ayOPixE	tablei	iindex, gi1ayOPixtbl, 1
i1ayOPixS = i1ayOPixS*i1ayOPixmagS+i1ayOPixoffS
i1ayOPixE = i1ayOPixE*i1ayOPixmagE+i1ayOPixoffE

; final table lookup
i1ayOPS	tablei	i1ayOPixS, gi1ayOPtbl, 1, gi1ayOPtoff, gi1ayOPtwrap
i1ayOPS = i1ayOPS*i1ayOPmagS+i1ayOPoffS	; i1ayOPS is final output
i1ayOPE	tablei	i1ayOPixE, gi1ayOPtbl, 1, gi1ayOPtoff, gi1ayOPtwrap
i1ayOPE = i1ayOPE*i1ayOPmagE+i1ayOPoffE	; i1ayOPS is final output
printks "final i1ayOPS %.3f i1ayOPE %.3f\n", idur, i1ayOPS, i1ayOPE

; 1
iindex = frac(i1aEnvPhaseS*gi1ayOFmagixsp)
i1ayOFmagixS	tablei	iindex, gi1ayOFmagixtbl, 1
iindex = frac(i1aEnvPhaseE*gi1ayOFmagixsp)
i1ayOFmagixE	tablei	iindex, gi1ayOFmagixtbl, 1
i1ayOFmagixS = i1ayOFmagixS*gi1ayOFmagixmag+gi1ayOFmagixoff
i1ayOFmagixE = i1ayOFmagixE*gi1ayOFmagixmag+gi1ayOFmagixoff
i1ayOFmagS	tablei	i1ayOFmagixS, gi1ayOFmagtbl, 1, gi1ayOFmagtoff, gi1ayOFmagtwrap
i1ayOFmagE	tablei	i1ayOFmagixE, gi1ayOFmagtbl, 1, gi1ayOFmagtoff, gi1ayOFmagtwrap
i1ayOFmagS = i1ayOFmagS*gi1ayOFmagmag+gi1ayOFmagoff
i1ayOFmagE = i1ayOFmagE*gi1ayOFmagmag+gi1ayOFmagoff

; 2
iindex = frac(i1aEnvPhaseS*gi1ayOFoffixsp)
i1ayOFoffixS	tablei	iindex, gi1ayOFoffixtbl, 1
iindex = frac(i1aEnvPhaseS*gi1ayOFoffixsp)
i1ayOFoffixE	tablei	iindex, gi1ayOFoffixtbl, 1
i1ayOFoffixS = i1ayOFoffixS*gi1ayOFoffixmag+gi1ayOFoffixoff
i1ayOFoffixE = i1ayOFoffixE*gi1ayOFoffixmag+gi1ayOFoffixoff
i1ayOFoffS	tablei	i1ayOFoffixS, gi1ayOFofftbl, 1, gi1ayOFofftoff, gi1ayOFofftwrap
i1ayOFoffE	tablei	i1ayOFoffixE, gi1ayOFofftbl, 1, gi1ayOFofftoff, gi1ayOFofftwrap
i1ayOFoffS = i1ayOFoffS*gi1ayOFoffmag+gi1ayOFoffoff
i1ayOFoffE = i1ayOFoffE*gi1ayOFoffmag+gi1ayOFoffoff

; 3
iindex = frac(i1aEnvPhaseS*gi1ayOFixmagixsp)
i1ayOFixmagixS	tablei	iindex, gi1ayOFixmagixtbl, 1
iindex = frac(i1aEnvPhaseE*gi1ayOFixmagixsp)
i1ayOFixmagixE	tablei	iindex, gi1ayOFixmagixtbl, 1
i1ayOFixmagixS = i1ayOFixmagixS*gi1ayOFixmagixmag+gi1ayOFixmagixoff
i1ayOFixmagixE = i1ayOFixmagixE*gi1ayOFixmagixmag+gi1ayOFixmagixoff
i1ayOFixmagS	tablei	i1ayOFixmagixS, gi1ayOFixmagtbl, 1, gi1ayOFixmagtoff, gi1ayOFixmagtwrap
i1ayOFixmagE	tablei	i1ayOFixmagixE, gi1ayOFixmagtbl, 1, gi1ayOFixmagtoff, gi1ayOFixmagtwrap
i1ayOFixmagS = i1ayOFixmagS*gi1ayOFixmagmag+gi1ayOFixmagoff
i1ayOFixmagE = i1ayOFixmagE*gi1ayOFixmagmag+gi1ayOFixmagoff

; 4
iindex = frac(i1aEnvPhaseS*gi1ayOFixoffixsp)
i1ayOFixoffixS	tablei	iindex, gi1ayOFixoffixtbl, 1
iindex = frac(i1aEnvPhaseE*gi1ayOFixoffixsp)
i1ayOFixoffixE	tablei	iindex, gi1ayOFixoffixtbl, 1
i1ayOFixoffixS = i1ayOFixoffixS*gi1ayOFixoffixmag+gi1ayOFixoffixoff
i1ayOFixoffixE = i1ayOFixoffixE*gi1ayOFixoffixmag+gi1ayOFixoffixoff
i1ayOFixoffS	tablei	i1ayOFixoffixS, gi1ayOFixofftbl, 1, gi1ayOFixofftoff, gi1ayOFixofftwrap
i1ayOFixoffE	tablei	i1ayOFixoffixE, gi1ayOFixofftbl, 1, gi1ayOFixofftoff, gi1ayOFixofftwrap
i1ayOFixoffS = i1ayOFixoffS*gi1ayOFixoffmag+gi1ayOFixoffoff
i1ayOFixoffE = i1ayOFixoffE*gi1ayOFixoffmag+gi1ayOFixoffoff

; 5
iindex = frac(i1aEnvPhaseS*gi1ayOFixspixsp)
i1ayOFixspixS	tablei	iindex, gi1ayOFixspixtbl, 1
iindex = frac(i1aEnvPhaseE*gi1ayOFixspixsp)
i1ayOFixspixE	tablei	iindex, gi1ayOFixspixtbl, 1
i1ayOFixspixS = i1ayOFixspixS*gi1ayOFixspixmag+gi1ayOFixspixoff
i1ayOFixspixE = i1ayOFixspixE*gi1ayOFixspixmag+gi1ayOFixspixoff
i1ayOFixspS	tablei	i1ayOFixspixS, gi1ayOFixsptbl, 1, gi1ayOFixsptoff, gi1ayOFixsptwrap
i1ayOFixspE	tablei	i1ayOFixspixE, gi1ayOFixsptbl, 1, gi1ayOFixsptoff, gi1ayOFixsptwrap
i1ayOFixspS = i1ayOFixspS*gi1ayOFixspmag+gi1ayOFixspoff
i1ayOFixspE = i1ayOFixspE*gi1ayOFixspmag+gi1ayOFixspoff

; Finally do top-level indexing
iindex = frac(i1aEnvPhaseS*i1ayOFixspS)
i1ayOFixS	tablei	iindex, gi1ayOFixtbl, 1
iindex = frac(i1aEnvPhaseE*i1ayOFixspE)
i1ayOFixE	tablei	iindex, gi1ayOFixtbl, 1
i1ayOFixS = i1ayOFixS*i1ayOFixmagS+i1ayOFixoffS
i1ayOFixE = i1ayOFixE*i1ayOFixmagE+i1ayOFixoffE

; we can't put this in a macro since the forms are different for form and path
; path is an offset to form

; final table lookup
i1ayOFS	tablei	i1ayOFixS+i1ayOPS, gi1ayOFtbl, 1, gi1ayOFtoff, gi1ayOFtwrap
i1ayOFS = i1ayOFS*i1ayOFmagS+i1ayOFoffS	; i1ayOFS is final output
i1ayOFE	tablei	i1ayOFixE+i1ayOPE, gi1ayOFtbl, 1, gi1ayOFtoff, gi1ayOFtwrap
i1ayOFE = i1ayOFE*i1ayOFmagE+i1ayOFoffE	; i1ayOFS is final output

;printks "amp layer 1: i1ayOFS %.3f i1ayOFE %.3f\n", idur, i1ayOFS, i1ayOFE

;if giaNumTerrains<2 igoto initAmpTerrainDone

; amp terrain layer n initialisation

;initAmpTerrainDone:
#

#define terrainAmpLayer1
#
; we can collapse this fivefold with a macro as well

;printks "terrainLayer1 khn %.0f\n", 0.02, khn
; generate sectional sub-indices
; one for each substituted variable
; 1
k1axOFmagix	oscili	gi1axOFmagixmag, gi1axOFmagixsp, gi1axOFmagixtbl
k1axOFmagix = k1axOFmagix+gi1axOFmagixoff
k1axOFmag		tablei	k1axOFmagix, gi1axOFmagtbl, 1, gi1axOFmagtoff, gi1axOFmagtwrap
k1axOFmag = k1axOFmag*gi1axOFmagmag+gi1axOFmagoff

; 2
k1axOFoffix		oscili	gi1axOFoffixmag, gi1axOFoffixsp, gi1axOFoffixtbl
k1axOFoffix = k1axOFoffix+gi1axOFoffixoff
k1axOFoff		tablei	k1axOFoffix, gi1axOFofftbl, 1, gi1axOFofftoff, gi1axOFofftwrap
k1axOFoff = k1axOFoff*gi1axOFoffmag+gi1axOFoffoff

; 3
k1axOFixmagix	oscili	gi1axOFixmagixmag, gi1axOFixmagixsp, gi1axOFixmagixtbl
k1axOFixmagix = k1axOFixmagix+gi1axOFixmagixoff
k1axOFixmag	tablei	k1axOFixmagix, gi1axOFixmagtbl, 1, gi1axOFixmagtoff, gi1axOFixmagtwrap
k1axOFixmag = k1axOFixmag*gi1axOFixmagmag+gi1axOFixmagoff

; 4
k1axOFixoffix	oscili	gi1axOFixoffixmag, gi1axOFixoffixsp, gi1axOFixoffixtbl
k1axOFixoffix = k1axOFixoffix+gi1axOFixoffixoff
k1axOFixoff		tablei	k1axOFixoffix, gi1axOFixofftbl, 1, gi1axOFixofftoff, gi1axOFixofftwrap
k1axOFixoff = k1axOFixoff*gi1axOFixoffmag+gi1axOFixoffoff

; 5
k1axOFixspix	oscili	gi1axOFixspixmag, gi1axOFixspixsp, gi1axOFixspixtbl
k1axOFixspix = k1axOFixspix+gi1axOFixspixoff
k1axOFixsp		tablei	k1axOFixspix, gi1axOFixsptbl, 1, gi1axOFixsptoff, gi1axOFixsptwrap
k1axOFixsp = k1axOFixsp*gi1axOFixspmag+gi1axOFixspoff

; Finally do top-level indexing with k-rate indices above.

k1axOFix	oscili	k1axOFixmag, k1axOFixsp, gi1axOFixtbl
k1axOFix = k1axOFix+k1axOFixoff

display k1axOFmagix, idur
display k1axOFmag, idur
display k1axOFoffix, idur
display k1axOFoff, idur
display k1axOFixmagix, idur
display k1axOFixmag, idur
display k1axOFixoffix, idur
display k1axOFixoff, idur
display k1axOFixspix, idur
display k1axOFixsp, idur
display k1axOFix, idur

; 1
k1ayOFmagix	oscili	gi1ayOFmagixmag, gi1ayOFmagixsp, gi1ayOFmagixtbl
k1ayOFmagix = k1ayOFmagix+gi1ayOFmagixoff
k1ayOFmag		tablei	k1ayOFmagix, gi1ayOFmagtbl, 1, gi1ayOFmagtoff, gi1ayOFmagtwrap
k1ayOFmag = k1ayOFmag*gi1ayOFmagmag+gi1ayOFmagoff

; 2
k1ayOFoffix		oscili	gi1ayOFoffixmag, gi1ayOFoffixsp, gi1ayOFoffixtbl
k1ayOFoffix = k1ayOFoffix+gi1ayOFoffixoff
k1ayOFoff		tablei	k1ayOFoffix, gi1ayOFofftbl, 1, gi1ayOFofftoff, gi1ayOFofftwrap
k1ayOFoff = k1ayOFoff*gi1ayOFoffmag+gi1ayOFoffoff

; 3
k1ayOFixmagix	oscili	gi1ayOFixmagixmag, gi1ayOFixmagixsp, gi1ayOFixmagixtbl
k1ayOFixmagix = k1ayOFixmagix+gi1ayOFixmagixoff
k1ayOFixmag	tablei	k1ayOFixmagix, gi1ayOFixmagtbl, 1, gi1ayOFixmagtoff, gi1ayOFixmagtwrap
k1ayOFixmag = k1ayOFixmag*gi1ayOFixmagmag+gi1ayOFixmagoff

; 4
k1ayOFixoffix	oscili	gi1ayOFixoffixmag, gi1ayOFixoffixsp, gi1ayOFixoffixtbl
k1ayOFixoffix = k1ayOFixoffix+gi1ayOFixoffixoff
k1ayOFixoff		tablei	k1ayOFixoffix, gi1ayOFixofftbl, 1, gi1ayOFixofftoff, gi1ayOFixofftwrap
k1ayOFixoff = k1ayOFixoff*gi1ayOFixoffmag+gi1ayOFixoffoff

; 5
k1ayOFixspix	oscili	gi1ayOFixspixmag, gi1ayOFixspixsp, gi1ayOFixspixtbl
k1ayOFixspix = k1ayOFixspix+gi1ayOFixspixoff
k1ayOFixsp		tablei	k1ayOFixspix, gi1ayOFixsptbl, 1, gi1ayOFixsptoff, gi1ayOFixsptwrap
k1ayOFixsp = k1ayOFixsp*gi1ayOFixspmag+gi1ayOFixspoff

; Finally do top-level indexing with k-rate indices above.

k1ayOFix	oscili	k1ayOFixmag, k1ayOFixsp, gi1ayOFixtbl
k1ayOFix = k1ayOFix+k1ayOFixoff

;display k1ayOFmagix, idur
;display k1ayOFmag, idur
;display k1ayOFoffix, idur
;display k1ayOFoff, idur
;display k1ayOFixmagix, idur
;display k1ayOFixmag, idur
;display k1ayOFixoffix, idur
;display k1ayOFixoff, idur
;display k1ayOFixspix, idur
;display k1ayOFixsp, idur
;display k1ayOFix, idur

; 1
k1axOPmagix	oscili	gi1axOPmagixmag, gi1axOPmagixsp, gi1axOPmagixtbl
k1axOPmagix = k1axOPmagix+gi1axOPmagixoff
k1axOPmag		tablei	k1axOPmagix, gi1axOPmagtbl, 1, gi1axOPmagtoff, gi1axOPmagtwrap
k1axOPmag = k1axOPmag*gi1axOPmagmag+gi1axOPmagoff

; 2
k1axOPoffix		oscili	gi1axOPoffixmag, gi1axOPoffixsp, gi1axOPoffixtbl
k1axOPoffix = k1axOPoffix+gi1axOPoffixoff
k1axOPoff		tablei	k1axOPoffix, gi1axOPofftbl, 1, gi1axOPofftoff, gi1axOPofftwrap
k1axOPoff = k1axOPoff*gi1axOPoffmag+gi1axOPoffoff

; 3
k1axOPixmagix	oscili	gi1axOPixmagixmag, gi1axOPixmagixsp, gi1axOPixmagixtbl
k1axOPixmagix = k1axOPixmagix+gi1axOPixmagixoff
k1axOPixmag	tablei	k1axOPixmagix, gi1axOPixmagtbl, 1, gi1axOPixmagtoff, gi1axOPixmagtwrap
k1axOPixmag = k1axOPixmag*gi1axOPixmagmag+gi1axOPixmagoff

; 4
k1axOPixoffix	oscili	gi1axOPixoffixmag, gi1axOPixoffixsp, gi1axOPixoffixtbl
k1axOPixoffix = k1axOPixoffix+gi1axOPixoffixoff
k1axOPixoff		tablei	k1axOPixoffix, gi1axOPixofftbl, 1, gi1axOPixofftoff, gi1axOPixofftwrap
k1axOPixoff = k1axOPixoff*gi1axOPixoffmag+gi1axOPixoffoff

; 5
k1axOPixspix	oscili	gi1axOPixspixmag, gi1axOPixspixsp, gi1axOPixspixtbl
k1axOPixspix = k1axOPixspix+gi1axOPixspixoff
k1axOPixsp		tablei	k1axOPixspix, gi1axOPixsptbl, 1, gi1axOPixsptoff, gi1axOPixsptwrap
k1axOPixsp = k1axOPixsp*gi1axOPixspmag+gi1axOPixspoff

; Finally do top-level indexing with k-rate indices above.

k1axOPix	oscili	k1axOPixmag, k1axOPixsp, gi1axOPixtbl
k1axOPix = k1axOPix+k1axOPixoff
k1axOP	tablei	k1axOPix, gi1axOPtbl, 1, gi1axOPtoff, gi1axOPtwrap
k1axOP = k1axOP*k1axOPmag+k1axOPoff	; k1axOP is final output

;display k1axOPmagix, idur
;display k1axOPmag, idur
;display k1axOPoffix, idur
;display k1axOPoff, idur
;display k1axOPixmagix, idur
;display k1axOPixmag, idur
;display k1axOPixoffix, idur
;display k1axOPixoff, idur
;display k1axOPixspix, idur
;display k1axOPixsp, idur
;display k1axOPix, idur
;display k1axOP, idur

; 1
k1ayOPmagix	oscili	gi1ayOPmagixmag, gi1ayOPmagixsp, gi1ayOPmagixtbl
k1ayOPmagix = k1ayOPmagix+gi1ayOPmagixoff
k1ayOPmag		tablei	k1ayOPmagix, gi1ayOPmagtbl, 1, gi1ayOPmagtoff, gi1ayOPmagtwrap
k1ayOPmag = k1ayOPmag*gi1ayOPmagmag+gi1ayOPmagoff

; 2
k1ayOPoffix		oscili	gi1ayOPoffixmag, gi1ayOPoffixsp, gi1ayOPoffixtbl
k1ayOPoffix = k1ayOPoffix+gi1ayOPoffixoff
k1ayOPoff		tablei	k1ayOPoffix, gi1ayOPofftbl, 1, gi1ayOPofftoff, gi1ayOPofftwrap
k1ayOPoff = k1ayOPoff*gi1ayOPoffmag+gi1ayOPoffoff

; 3
k1ayOPixmagix	oscili	gi1ayOPixmagixmag, gi1ayOPixmagixsp, gi1ayOPixmagixtbl
k1ayOPixmagix = k1ayOPixmagix+gi1ayOPixmagixoff
k1ayOPixmag	tablei	k1ayOPixmagix, gi1ayOPixmagtbl, 1, gi1ayOPixmagtoff, gi1ayOPixmagtwrap
k1ayOPixmag = k1ayOPixmag*gi1ayOPixmagmag+gi1ayOPixmagoff

; 4
k1ayOPixoffix	oscili	gi1ayOPixoffixmag, gi1ayOPixoffixsp, gi1ayOPixoffixtbl
k1ayOPixoffix = k1ayOPixoffix+gi1ayOPixoffixoff
k1ayOPixoff		tablei	k1ayOPixoffix, gi1ayOPixofftbl, 1, gi1ayOPixofftoff, gi1ayOPixofftwrap
k1ayOPixoff = k1ayOPixoff*gi1ayOPixoffmag+gi1ayOPixoffoff

; 5
k1ayOPixspix	oscili	gi1ayOPixspixmag, gi1ayOPixspixsp, gi1ayOPixspixtbl
k1ayOPixspix = k1ayOPixspix+gi1ayOPixspixoff
k1ayOPixsp		tablei	k1ayOPixspix, gi1ayOPixsptbl, 1, gi1ayOPixsptoff, gi1ayOPixsptwrap
k1ayOPixsp = k1ayOPixsp*gi1ayOPixspmag+gi1ayOPixspoff

; Finally do top-level indexing with k-rate indices above.

k1ayOPix	oscili	k1ayOPixmag, k1ayOPixsp, gi1ayOPixtbl
k1ayOPix = k1ayOPix+k1ayOPixoff
k1ayOP	tablei	k1ayOPix, gi1ayOPtbl, 1, gi1ayOPtoff, gi1ayOPtwrap
k1ayOP = k1ayOP*k1ayOPmag+k1ayOPoff	; k1ayOP is final output

;display k1ayOPmagix, idur
;display k1ayOPmag, idur
;display k1ayOPoffix, idur
;display k1ayOPoff, idur
;display k1ayOPixmagix, idur
;display k1ayOPixmag, idur
;display k1ayOPixoffix, idur
;display k1ayOPixoff, idur
;display k1ayOPixspix, idur
;display k1ayOPixsp, idur
;display k1ayOPix, idur
;display k1ayOP, idur

; the orbit positions k1axOP, kay1OP are added to the orbit path indices
; the terrain specified by a<x/y>OFtbl is indexed by this composite
k1axOF	tablei	k1axOFix+k1axOP, gi1axOFtbl, 1, gi1axOFtoff, gi1axOFtwrap
k1axOF = k1axOF*k1axOFmag+k1axOFoff	; k1axOF is final output

k1ayOF	tablei	k1ayOFix+k1ayOP, gi1ayOFtbl, 1, gi1ayOFtoff, gi1ayOFtwrap
k1ayOF = k1ayOF*k1ayOFmag+k1ayOFoff	; k1ayOF is final output

display k1axOF, idur
display k1ayOF, idur
gkamodamp = k1axOF*k1ayOF

k1axmodscl	linseg	1, i1aEnvPhaseS, 1, $mindur, 1/i1axOFS, i1aTerrainDur, 1/i1axOFE, $mindur, 1, idur-i1aEnvPhaseS-i1aTerrainDur, 1, $mindur, 0
k1aymodscl	linseg	1, i1aEnvPhaseS, 1, $mindur, 1/i1ayOFS, i1aTerrainDur, 1/i1ayOFE, $mindur, 1, idur-i1aEnvPhaseS-i1aTerrainDur, 1, $mindur, 0

gkmodamp = gkmodamp*k1amodlen
gkmodamp = gkmodamp+k1amodlen2
gkmodamp = gkamodamp*k1axmodscl*k1aymodscl
gkmodamp = ((inoscs-inposcs==0 && gi1aUseAllH==0 && khn>inposcs)? 1 : gkamodamp)
#
